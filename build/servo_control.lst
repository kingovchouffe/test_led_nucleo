ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"servo_control.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.syntax divided
  16              		.global _printf_float
  17              		.global _scanf_float
  18              		.thumb
  19              		.syntax unified
  20              		.section	.text.sendServoByte,"ax",%progbits
  21              		.align	1
  22              		.global	sendServoByte
  23              		.arch armv6s-m
  24              		.syntax unified
  25              		.code	16
  26              		.thumb_func
  27              		.fpu softvfp
  29              	sendServoByte:
  30              	.LVL0:
  31              	.LFB57:
  32              		.file 1 "Core/Src/servo_control.c"
   1:Core/Src/servo_control.c **** /*
   2:Core/Src/servo_control.c **** 
   3:Core/Src/servo_control.c **** Code to control multiple Dynamixel AX-12 servo motors over USART
   4:Core/Src/servo_control.c **** on an STM32F4 chip.
   5:Core/Src/servo_control.c **** 
   6:Core/Src/servo_control.c **** Kent deVillafranca
   7:Core/Src/servo_control.c **** April 2013
   8:Core/Src/servo_control.c **** 
   9:Core/Src/servo_control.c **** */
  10:Core/Src/servo_control.c **** 
  11:Core/Src/servo_control.c **** #include "main.h"
  12:Core/Src/servo_control.c **** 
  13:Core/Src/servo_control.c **** 
  14:Core/Src/servo_control.c **** #define TEST_COMMANDS
  15:Core/Src/servo_control.c **** __asm__(".global _printf_float");
  16:Core/Src/servo_control.c **** __asm__(".global _scanf_float"); 
  17:Core/Src/servo_control.c **** 
  18:Core/Src/servo_control.c **** 
  19:Core/Src/servo_control.c **** 
  20:Core/Src/servo_control.c **** #ifndef true
  21:Core/Src/servo_control.c **** #define true ((bool)1)
  22:Core/Src/servo_control.c **** #endif
  23:Core/Src/servo_control.c **** 
  24:Core/Src/servo_control.c **** #ifndef false
  25:Core/Src/servo_control.c **** #define false ((bool)0)
  26:Core/Src/servo_control.c **** #endif
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 2


  27:Core/Src/servo_control.c **** 
  28:Core/Src/servo_control.c **** uint8_t servoErrorCode = 0;
  29:Core/Src/servo_control.c **** 
  30:Core/Src/servo_control.c **** ServoResponse response;
  31:Core/Src/servo_control.c **** 
  32:Core/Src/servo_control.c **** volatile uint8_t receiveBuffer[REC_BUFFER_LEN];
  33:Core/Src/servo_control.c **** volatile uint8_t* volatile receiveBufferStart = receiveBuffer;
  34:Core/Src/servo_control.c **** volatile uint8_t* volatile receiveBufferEnd = receiveBuffer;
  35:Core/Src/servo_control.c **** 
  36:Core/Src/servo_control.c **** 
  37:Core/Src/servo_control.c **** 
  38:Core/Src/servo_control.c **** #define RETURN_DELAY        0x05
  39:Core/Src/servo_control.c **** #define BLINK_CONDITIONS    0x11
  40:Core/Src/servo_control.c **** #define SHUTDOWN_CONDITIONS 0x12
  41:Core/Src/servo_control.c **** #define TORQUE              0x22
  42:Core/Src/servo_control.c **** #define MAX_SPEED           0x20
  43:Core/Src/servo_control.c **** #define CURRENT_SPEED       0x26
  44:Core/Src/servo_control.c **** #define GOAL_ANGLE          0x1e
  45:Core/Src/servo_control.c **** #define CURRENT_ANGLE       0x24
  46:Core/Src/servo_control.c **** 
  47:Core/Src/servo_control.c **** void sendServoCommand (const uint8_t servoId,
  48:Core/Src/servo_control.c ****                        const ServoCommand commandByte,
  49:Core/Src/servo_control.c ****                        const uint8_t numParams,
  50:Core/Src/servo_control.c ****                        const uint8_t *params)
  51:Core/Src/servo_control.c **** {
  52:Core/Src/servo_control.c ****     sendServoByte (0xff);
  53:Core/Src/servo_control.c ****     sendServoByte (0xff);  // command header
  54:Core/Src/servo_control.c ****     
  55:Core/Src/servo_control.c ****     sendServoByte (servoId);  // servo ID
  56:Core/Src/servo_control.c ****     uint8_t checksum = servoId;
  57:Core/Src/servo_control.c ****     
  58:Core/Src/servo_control.c ****     sendServoByte (numParams + 2);  // number of following bytes
  59:Core/Src/servo_control.c ****     sendServoByte ((uint8_t)commandByte);  // command
  60:Core/Src/servo_control.c ****     
  61:Core/Src/servo_control.c ****     checksum += numParams + 2 + commandByte;
  62:Core/Src/servo_control.c ****     
  63:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < numParams; i++)
  64:Core/Src/servo_control.c ****     {
  65:Core/Src/servo_control.c ****         sendServoByte (params[i]);  // parameters
  66:Core/Src/servo_control.c ****         checksum += params[i];
  67:Core/Src/servo_control.c ****     }
  68:Core/Src/servo_control.c ****     
  69:Core/Src/servo_control.c ****     sendServoByte (~checksum);  // checksum
  70:Core/Src/servo_control.c **** }
  71:Core/Src/servo_control.c **** 
  72:Core/Src/servo_control.c **** bool getServoResponse (void)
  73:Core/Src/servo_control.c **** {
  74:Core/Src/servo_control.c ****     uint8_t retries = 0;
  75:Core/Src/servo_control.c ****     
  76:Core/Src/servo_control.c ****     clearServoReceiveBuffer();
  77:Core/Src/servo_control.c ****     
  78:Core/Src/servo_control.c ****     while (getServoBytesAvailable() < 4)
  79:Core/Src/servo_control.c ****     {
  80:Core/Src/servo_control.c ****         retries++;
  81:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
  82:Core/Src/servo_control.c ****         {
  83:Core/Src/servo_control.c ****             #ifdef SERVO_DEBUG
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 3


  84:Core/Src/servo_control.c ****             printf ("Too many retries at start\n\r");
  85:Core/Src/servo_control.c ****             #endif
  86:Core/Src/servo_control.c ****             return false;
  87:Core/Src/servo_control.c ****         }
  88:Core/Src/servo_control.c ****         
  89:Core/Src/servo_control.c ****         
  90:Core/Src/servo_control.c ****     }
  91:Core/Src/servo_control.c ****     retries = 0;
  92:Core/Src/servo_control.c ****     
  93:Core/Src/servo_control.c ****     getServoByte();  // servo header (two 0xff bytes)
  94:Core/Src/servo_control.c ****     getServoByte();
  95:Core/Src/servo_control.c ****     
  96:Core/Src/servo_control.c ****     response.id = getServoByte();
  97:Core/Src/servo_control.c ****     response.length = getServoByte();
  98:Core/Src/servo_control.c ****     
  99:Core/Src/servo_control.c ****     if (response.length > SERVO_MAX_PARAMS)
 100:Core/Src/servo_control.c ****     {
 101:Core/Src/servo_control.c ****         #ifdef SERVO_DEBUG
 102:Core/Src/servo_control.c ****         printf ("Response length too big: %d\n\r", (int)response.length);
 103:Core/Src/servo_control.c ****         #endif
 104:Core/Src/servo_control.c ****         return false;
 105:Core/Src/servo_control.c ****     }
 106:Core/Src/servo_control.c ****     
 107:Core/Src/servo_control.c ****     while (getServoBytesAvailable() < response.length)
 108:Core/Src/servo_control.c ****     {
 109:Core/Src/servo_control.c ****         retries++;
 110:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
 111:Core/Src/servo_control.c ****         {
 112:Core/Src/servo_control.c ****             #ifdef SERVO_DEBUG
 113:Core/Src/servo_control.c ****             printf ("Too many retries waiting for params, got %d of %d params\n\r", getServoBytesAv
 114:Core/Src/servo_control.c ****             #endif
 115:Core/Src/servo_control.c ****             return false;
 116:Core/Src/servo_control.c ****         }
 117:Core/Src/servo_control.c ****         
 118:Core/Src/servo_control.c ****         
 119:Core/Src/servo_control.c ****     }
 120:Core/Src/servo_control.c ****     
 121:Core/Src/servo_control.c ****     response.error = getServoByte();
 122:Core/Src/servo_control.c ****     servoErrorCode = response.error;
 123:Core/Src/servo_control.c ****     
 124:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < response.length - 2; i++)
 125:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 126:Core/Src/servo_control.c ****     
 127:Core/Src/servo_control.c ****     
 128:Core/Src/servo_control.c ****     uint8_t calcChecksum = response.id + response.length + response.error;
 129:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < response.length - 2; i++)
 130:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 131:Core/Src/servo_control.c ****     calcChecksum = ~calcChecksum;
 132:Core/Src/servo_control.c ****     
 133:Core/Src/servo_control.c ****     const uint8_t recChecksum = getServoByte();
 134:Core/Src/servo_control.c ****     if (calcChecksum != recChecksum)
 135:Core/Src/servo_control.c ****     {
 136:Core/Src/servo_control.c ****         #ifdef SERVO_DEBUG
 137:Core/Src/servo_control.c ****         printf ("Checksum mismatch: %x calculated, %x received\n\r", calcChecksum, recChecksum);
 138:Core/Src/servo_control.c ****         #endif
 139:Core/Src/servo_control.c ****         return false;
 140:Core/Src/servo_control.c ****     }
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 4


 141:Core/Src/servo_control.c ****     
 142:Core/Src/servo_control.c ****     return true;
 143:Core/Src/servo_control.c **** }
 144:Core/Src/servo_control.c **** 
 145:Core/Src/servo_control.c **** inline bool getAndCheckResponse (const uint8_t servoId)
 146:Core/Src/servo_control.c **** {
 147:Core/Src/servo_control.c ****     if (!getServoResponse())
 148:Core/Src/servo_control.c ****     {
 149:Core/Src/servo_control.c ****         #ifdef SERVO_DEBUG
 150:Core/Src/servo_control.c ****         printf ("Servo error: Servo %d did not respond correctly or at all\n\r", (int)servoId);
 151:Core/Src/servo_control.c ****         #endif
 152:Core/Src/servo_control.c ****         return false;
 153:Core/Src/servo_control.c ****     }
 154:Core/Src/servo_control.c ****     
 155:Core/Src/servo_control.c ****     if (response.id != servoId)
 156:Core/Src/servo_control.c ****     {
 157:Core/Src/servo_control.c ****         #ifdef SERVO_DEBUG
 158:Core/Src/servo_control.c ****         printf ("Servo error: Response ID %d does not match command ID %d\n\r", (int)response.id);
 159:Core/Src/servo_control.c ****         #endif
 160:Core/Src/servo_control.c ****         return false;
 161:Core/Src/servo_control.c ****     }
 162:Core/Src/servo_control.c ****     
 163:Core/Src/servo_control.c ****     if (response.error != 0)
 164:Core/Src/servo_control.c ****     {
 165:Core/Src/servo_control.c ****         #ifdef SERVO_DEBUG
 166:Core/Src/servo_control.c ****         printf ("Servo error: Response error code was nonzero (%d)\n\r", (int)response.error);
 167:Core/Src/servo_control.c ****         #endif
 168:Core/Src/servo_control.c ****         return false;
 169:Core/Src/servo_control.c ****     }
 170:Core/Src/servo_control.c ****     
 171:Core/Src/servo_control.c ****     return true;
 172:Core/Src/servo_control.c **** }
 173:Core/Src/servo_control.c **** 
 174:Core/Src/servo_control.c **** // ping a servo, returns true if we get back the expected values
 175:Core/Src/servo_control.c **** bool pingServo (const uint8_t servoId)
 176:Core/Src/servo_control.c **** {
 177:Core/Src/servo_control.c ****     sendServoCommand (servoId, PING, 0, 0);
 178:Core/Src/servo_control.c ****     
 179:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 180:Core/Src/servo_control.c ****         return false;
 181:Core/Src/servo_control.c ****     
 182:Core/Src/servo_control.c ****     return true;
 183:Core/Src/servo_control.c **** }
 184:Core/Src/servo_control.c **** 
 185:Core/Src/servo_control.c **** bool setServoReturnDelayMicros (const uint8_t servoId,
 186:Core/Src/servo_control.c ****                                 const uint16_t micros)
 187:Core/Src/servo_control.c **** {
 188:Core/Src/servo_control.c ****     if (micros > 510)
 189:Core/Src/servo_control.c ****         return false;
 190:Core/Src/servo_control.c ****     
 191:Core/Src/servo_control.c ****     const uint8_t params[2] = {RETURN_DELAY,
 192:Core/Src/servo_control.c ****                                (uint8_t)((micros / 2) & 0xff)};
 193:Core/Src/servo_control.c ****     
 194:Core/Src/servo_control.c ****     sendServoCommand (servoId, WRITE, 2, params);
 195:Core/Src/servo_control.c ****     
 196:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 197:Core/Src/servo_control.c ****         return false;
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 5


 198:Core/Src/servo_control.c ****     
 199:Core/Src/servo_control.c ****     return true;
 200:Core/Src/servo_control.c **** }
 201:Core/Src/servo_control.c **** 
 202:Core/Src/servo_control.c **** // set the events that will cause the servo to blink its LED
 203:Core/Src/servo_control.c **** bool setServoBlinkConditions (const uint8_t servoId,
 204:Core/Src/servo_control.c ****                               const uint8_t flags)
 205:Core/Src/servo_control.c **** {
 206:Core/Src/servo_control.c ****     const uint8_t params[2] = {BLINK_CONDITIONS,
 207:Core/Src/servo_control.c ****                                flags};
 208:Core/Src/servo_control.c ****     
 209:Core/Src/servo_control.c ****     sendServoCommand (servoId, WRITE, 2, params);
 210:Core/Src/servo_control.c ****     
 211:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 212:Core/Src/servo_control.c ****         return false;
 213:Core/Src/servo_control.c ****     
 214:Core/Src/servo_control.c ****     return true;
 215:Core/Src/servo_control.c **** }
 216:Core/Src/servo_control.c **** 
 217:Core/Src/servo_control.c **** // set the events that will cause the servo to shut off torque
 218:Core/Src/servo_control.c **** bool setServoShutdownConditions (const uint8_t servoId,
 219:Core/Src/servo_control.c ****                                  const uint8_t flags)
 220:Core/Src/servo_control.c **** {
 221:Core/Src/servo_control.c ****     const uint8_t params[2] = {SHUTDOWN_CONDITIONS,
 222:Core/Src/servo_control.c ****                                flags};
 223:Core/Src/servo_control.c ****     
 224:Core/Src/servo_control.c ****     sendServoCommand (servoId, WRITE, 2, params);
 225:Core/Src/servo_control.c ****     
 226:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 227:Core/Src/servo_control.c ****         return false;
 228:Core/Src/servo_control.c ****     
 229:Core/Src/servo_control.c ****     return true;
 230:Core/Src/servo_control.c **** }
 231:Core/Src/servo_control.c **** 
 232:Core/Src/servo_control.c **** 
 233:Core/Src/servo_control.c **** // valid torque values are from 0 (free running) to 1023 (max)
 234:Core/Src/servo_control.c **** bool setServoTorque (const uint8_t servoId,
 235:Core/Src/servo_control.c ****                      const uint16_t torqueValue)
 236:Core/Src/servo_control.c **** {
 237:Core/Src/servo_control.c ****     const uint8_t highByte = (uint8_t)((torqueValue >> 8) & 0xff);
 238:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(torqueValue & 0xff);
 239:Core/Src/servo_control.c ****     
 240:Core/Src/servo_control.c ****     if (torqueValue > 1023)
 241:Core/Src/servo_control.c ****         return false;
 242:Core/Src/servo_control.c ****     
 243:Core/Src/servo_control.c ****     const uint8_t params[3] = {TORQUE,
 244:Core/Src/servo_control.c ****                                lowByte,
 245:Core/Src/servo_control.c ****                                highByte};
 246:Core/Src/servo_control.c ****     
 247:Core/Src/servo_control.c ****     sendServoCommand (servoId, WRITE, 3, params);
 248:Core/Src/servo_control.c ****     
 249:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 250:Core/Src/servo_control.c ****         return false;
 251:Core/Src/servo_control.c ****     
 252:Core/Src/servo_control.c ****     return true;
 253:Core/Src/servo_control.c **** }
 254:Core/Src/servo_control.c **** 
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 6


 255:Core/Src/servo_control.c **** bool getServoTorque (const uint8_t servoId,
 256:Core/Src/servo_control.c ****                      uint16_t *torqueValue)
 257:Core/Src/servo_control.c **** {
 258:Core/Src/servo_control.c ****     const uint8_t params[2] = {TORQUE,
 259:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address TORQUE
 260:Core/Src/servo_control.c ****     
 261:Core/Src/servo_control.c ****     sendServoCommand (servoId, READ, 2, params);
 262:Core/Src/servo_control.c ****     
 263:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 264:Core/Src/servo_control.c ****         return false;
 265:Core/Src/servo_control.c ****     
 266:Core/Src/servo_control.c ****     *torqueValue = response.params[1];
 267:Core/Src/servo_control.c ****     *torqueValue <<= 8;
 268:Core/Src/servo_control.c ****     *torqueValue |= response.params[0];
 269:Core/Src/servo_control.c ****     
 270:Core/Src/servo_control.c ****     return true;
 271:Core/Src/servo_control.c **** }
 272:Core/Src/servo_control.c **** 
 273:Core/Src/servo_control.c **** // speed values go from 1 (incredibly slow) to 1023 (114 RPM)
 274:Core/Src/servo_control.c **** // a value of zero will disable velocity control
 275:Core/Src/servo_control.c **** bool setServoMaxSpeed (const uint8_t servoId,
 276:Core/Src/servo_control.c ****                        const uint16_t speedValue)
 277:Core/Src/servo_control.c **** {
 278:Core/Src/servo_control.c ****     const uint8_t highByte = (uint8_t)((speedValue >> 8) & 0xff);
 279:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(speedValue & 0xff);
 280:Core/Src/servo_control.c ****     
 281:Core/Src/servo_control.c ****     if (speedValue > 1023)
 282:Core/Src/servo_control.c ****         return false;
 283:Core/Src/servo_control.c ****     
 284:Core/Src/servo_control.c ****     const uint8_t params[3] = {MAX_SPEED,
 285:Core/Src/servo_control.c ****                                lowByte,
 286:Core/Src/servo_control.c ****                                highByte};
 287:Core/Src/servo_control.c ****     
 288:Core/Src/servo_control.c ****     sendServoCommand (servoId, WRITE, 3, params);
 289:Core/Src/servo_control.c ****     
 290:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 291:Core/Src/servo_control.c ****         return false;
 292:Core/Src/servo_control.c ****     
 293:Core/Src/servo_control.c ****     return true;
 294:Core/Src/servo_control.c **** }
 295:Core/Src/servo_control.c **** 
 296:Core/Src/servo_control.c **** bool getServoMaxSpeed (const uint8_t servoId,
 297:Core/Src/servo_control.c ****                        uint16_t *speedValue)
 298:Core/Src/servo_control.c **** {
 299:Core/Src/servo_control.c ****     const uint8_t params[2] = {MAX_SPEED,
 300:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address MAX_SPEED
 301:Core/Src/servo_control.c ****     
 302:Core/Src/servo_control.c ****     sendServoCommand (servoId, READ, 2, params);
 303:Core/Src/servo_control.c ****     
 304:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 305:Core/Src/servo_control.c ****         return false;
 306:Core/Src/servo_control.c ****     
 307:Core/Src/servo_control.c ****     *speedValue = response.params[1];
 308:Core/Src/servo_control.c ****     *speedValue <<= 8;
 309:Core/Src/servo_control.c ****     *speedValue |= response.params[0];
 310:Core/Src/servo_control.c ****     
 311:Core/Src/servo_control.c ****     return true;
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 7


 312:Core/Src/servo_control.c **** }
 313:Core/Src/servo_control.c **** 
 314:Core/Src/servo_control.c **** bool getServoCurrentVelocity (const uint8_t servoId,
 315:Core/Src/servo_control.c ****                               int16_t *velocityValue)
 316:Core/Src/servo_control.c **** {
 317:Core/Src/servo_control.c ****     const uint8_t params[2] = {CURRENT_SPEED,
 318:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address CURRENT_SPEED
 319:Core/Src/servo_control.c ****     
 320:Core/Src/servo_control.c ****     sendServoCommand (servoId, READ, 2, params);
 321:Core/Src/servo_control.c ****     
 322:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 323:Core/Src/servo_control.c ****         return false;
 324:Core/Src/servo_control.c ****     
 325:Core/Src/servo_control.c ****     *velocityValue = response.params[1];
 326:Core/Src/servo_control.c ****     *velocityValue <<= 8;
 327:Core/Src/servo_control.c ****     *velocityValue |= response.params[0];
 328:Core/Src/servo_control.c ****     
 329:Core/Src/servo_control.c ****     return true;
 330:Core/Src/servo_control.c **** }
 331:Core/Src/servo_control.c **** 
 332:Core/Src/servo_control.c **** // make the servo move to an angle
 333:Core/Src/servo_control.c **** // valid angles are between 0 and 300 degrees
 334:Core/Src/servo_control.c **** bool setServoAngle (const uint8_t servoId,
 335:Core/Src/servo_control.c ****                     const float angle)
 336:Core/Src/servo_control.c **** {
 337:Core/Src/servo_control.c ****     if (angle < 0 || angle > 300)
 338:Core/Src/servo_control.c ****         return false;
 339:Core/Src/servo_control.c ****     
 340:Core/Src/servo_control.c ****     // angle values go from 0 to 0x3ff (1023)
 341:Core/Src/servo_control.c ****     const uint16_t angleValue = (uint16_t)(angle * (1023.0 / 300.0));
 342:Core/Src/servo_control.c ****     
 343:Core/Src/servo_control.c ****     const uint8_t highByte = (uint8_t)((angleValue >> 8) & 0xff);
 344:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
 345:Core/Src/servo_control.c ****     
 346:Core/Src/servo_control.c ****     const uint8_t params[3] = {GOAL_ANGLE,
 347:Core/Src/servo_control.c ****                                lowByte,
 348:Core/Src/servo_control.c ****                                highByte};
 349:Core/Src/servo_control.c ****     
 350:Core/Src/servo_control.c ****     sendServoCommand (servoId, WRITE, 3, params);
 351:Core/Src/servo_control.c ****     
 352:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 353:Core/Src/servo_control.c ****         return false;
 354:Core/Src/servo_control.c ****     
 355:Core/Src/servo_control.c ****     return true;
 356:Core/Src/servo_control.c **** }
 357:Core/Src/servo_control.c **** 
 358:Core/Src/servo_control.c **** bool getServoAngle (const uint8_t servoId,
 359:Core/Src/servo_control.c ****                     float *angle)
 360:Core/Src/servo_control.c **** {
 361:Core/Src/servo_control.c ****     const uint8_t params[2] = {CURRENT_ANGLE,
 362:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address CURRENT_ANGLE
 363:Core/Src/servo_control.c ****     
 364:Core/Src/servo_control.c ****     sendServoCommand (servoId, READ, 2, params);
 365:Core/Src/servo_control.c ****     
 366:Core/Src/servo_control.c ****     if (!getAndCheckResponse (servoId))
 367:Core/Src/servo_control.c ****         return false;
 368:Core/Src/servo_control.c ****     
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 8


 369:Core/Src/servo_control.c ****     uint16_t angleValue = response.params[1];
 370:Core/Src/servo_control.c ****     angleValue <<= 8;
 371:Core/Src/servo_control.c ****     angleValue |= response.params[0];
 372:Core/Src/servo_control.c ****     
 373:Core/Src/servo_control.c ****     *angle = (float)angleValue * 300.0 / 1023.0;
 374:Core/Src/servo_control.c ****     
 375:Core/Src/servo_control.c ****     return true;
 376:Core/Src/servo_control.c **** }
 377:Core/Src/servo_control.c **** 
 378:Core/Src/servo_control.c **** void sendServoByte (uint8_t byte)
 379:Core/Src/servo_control.c **** {
  33              		.loc 1 379 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		.loc 1 379 1 is_stmt 0 view .LVU1
  38 0000 30B5     		push	{r4, r5, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 12
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
  44 0002 83B0     		sub	sp, sp, #12
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47 0004 6B46     		mov	r3, sp
  48 0006 DD1D     		adds	r5, r3, #7
  49 0008 D871     		strb	r0, [r3, #7]
 380:Core/Src/servo_control.c **** 	  HAL_HalfDuplex_EnableTransmitter(&huart1);
  50              		.loc 1 380 4 is_stmt 1 view .LVU2
  51 000a 074C     		ldr	r4, .L2
  52 000c 2000     		movs	r0, r4
  53              	.LVL1:
  54              		.loc 1 380 4 is_stmt 0 view .LVU3
  55 000e FFF7FEFF 		bl	HAL_HalfDuplex_EnableTransmitter
  56              	.LVL2:
 381:Core/Src/servo_control.c **** 	  HAL_UART_Transmit(&huart1,&byte,sizeof(byte),100);
  57              		.loc 1 381 4 is_stmt 1 view .LVU4
  58 0012 6423     		movs	r3, #100
  59 0014 0122     		movs	r2, #1
  60 0016 2900     		movs	r1, r5
  61 0018 2000     		movs	r0, r4
  62 001a FFF7FEFF 		bl	HAL_UART_Transmit
  63              	.LVL3:
 382:Core/Src/servo_control.c ****       HAL_HalfDuplex_EnableReceiver(&huart1);
  64              		.loc 1 382 7 view .LVU5
  65 001e 2000     		movs	r0, r4
  66 0020 FFF7FEFF 		bl	HAL_HalfDuplex_EnableReceiver
  67              	.LVL4:
 383:Core/Src/servo_control.c **** 	  //Loop until the end of transmission
 384:Core/Src/servo_control.c **** 	  //while (USART_GetFlagStatus (USART1, USART_GetFlagStatus) == RESET);
 385:Core/Src/servo_control.c **** }
  68              		.loc 1 385 1 is_stmt 0 view .LVU6
  69 0024 03B0     		add	sp, sp, #12
  70              		@ sp needed
  71 0026 30BD     		pop	{r4, r5, pc}
  72              	.L3:
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 9


  73              		.align	2
  74              	.L2:
  75 0028 00000000 		.word	huart1
  76              		.cfi_endproc
  77              	.LFE57:
  79              		.section	.text.sendServoCommand,"ax",%progbits
  80              		.align	1
  81              		.global	sendServoCommand
  82              		.syntax unified
  83              		.code	16
  84              		.thumb_func
  85              		.fpu softvfp
  87              	sendServoCommand:
  88              	.LVL5:
  89              	.LFB43:
  51:Core/Src/servo_control.c ****     sendServoByte (0xff);
  90              		.loc 1 51 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  51:Core/Src/servo_control.c ****     sendServoByte (0xff);
  94              		.loc 1 51 1 is_stmt 0 view .LVU8
  95 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 20
  98              		.cfi_offset 4, -20
  99              		.cfi_offset 5, -16
 100              		.cfi_offset 6, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 C646     		mov	lr, r8
 104 0004 00B5     		push	{lr}
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 24
 107              		.cfi_offset 8, -24
 108 0006 8046     		mov	r8, r0
 109 0008 0C00     		movs	r4, r1
 110 000a 1700     		movs	r7, r2
 111 000c 1E00     		movs	r6, r3
  52:Core/Src/servo_control.c ****     sendServoByte (0xff);  // command header
 112              		.loc 1 52 5 is_stmt 1 view .LVU9
 113 000e FF20     		movs	r0, #255
 114              	.LVL6:
  52:Core/Src/servo_control.c ****     sendServoByte (0xff);  // command header
 115              		.loc 1 52 5 is_stmt 0 view .LVU10
 116 0010 FFF7FEFF 		bl	sendServoByte
 117              	.LVL7:
  53:Core/Src/servo_control.c ****     
 118              		.loc 1 53 5 is_stmt 1 view .LVU11
 119 0014 FF20     		movs	r0, #255
 120 0016 FFF7FEFF 		bl	sendServoByte
 121              	.LVL8:
  55:Core/Src/servo_control.c ****     uint8_t checksum = servoId;
 122              		.loc 1 55 5 view .LVU12
 123 001a 4046     		mov	r0, r8
 124 001c FFF7FEFF 		bl	sendServoByte
 125              	.LVL9:
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 10


  56:Core/Src/servo_control.c ****     
 126              		.loc 1 56 5 view .LVU13
  58:Core/Src/servo_control.c ****     sendServoByte ((uint8_t)commandByte);  // command
 127              		.loc 1 58 5 view .LVU14
 128 0020 B81C     		adds	r0, r7, #2
 129 0022 C0B2     		uxtb	r0, r0
 130 0024 FFF7FEFF 		bl	sendServoByte
 131              	.LVL10:
  59:Core/Src/servo_control.c ****     
 132              		.loc 1 59 5 view .LVU15
 133 0028 2000     		movs	r0, r4
 134 002a FFF7FEFF 		bl	sendServoByte
 135              	.LVL11:
  61:Core/Src/servo_control.c ****     
 136              		.loc 1 61 5 view .LVU16
  61:Core/Src/servo_control.c ****     
 137              		.loc 1 61 31 is_stmt 0 view .LVU17
 138 002e 3C19     		adds	r4, r7, r4
 139 0030 E5B2     		uxtb	r5, r4
  61:Core/Src/servo_control.c ****     
 140              		.loc 1 61 14 view .LVU18
 141 0032 4544     		add	r5, r5, r8
 142 0034 0235     		adds	r5, r5, #2
 143 0036 EDB2     		uxtb	r5, r5
 144              	.LVL12:
  63:Core/Src/servo_control.c ****     {
 145              		.loc 1 63 5 is_stmt 1 view .LVU19
 146              	.LBB24:
  63:Core/Src/servo_control.c ****     {
 147              		.loc 1 63 10 view .LVU20
  63:Core/Src/servo_control.c ****     {
 148              		.loc 1 63 18 is_stmt 0 view .LVU21
 149 0038 0024     		movs	r4, #0
 150              	.LVL13:
 151              	.L5:
  63:Core/Src/servo_control.c ****     {
 152              		.loc 1 63 25 is_stmt 1 discriminator 1 view .LVU22
  63:Core/Src/servo_control.c ****     {
 153              		.loc 1 63 5 is_stmt 0 discriminator 1 view .LVU23
 154 003a BC42     		cmp	r4, r7
 155 003c 0BD2     		bcs	.L7
  65:Core/Src/servo_control.c ****         checksum += params[i];
 156              		.loc 1 65 9 is_stmt 1 discriminator 3 view .LVU24
  65:Core/Src/servo_control.c ****         checksum += params[i];
 157              		.loc 1 65 30 is_stmt 0 discriminator 3 view .LVU25
 158 003e 3319     		adds	r3, r6, r4
 159 0040 9846     		mov	r8, r3
  65:Core/Src/servo_control.c ****         checksum += params[i];
 160              		.loc 1 65 9 discriminator 3 view .LVU26
 161 0042 305D     		ldrb	r0, [r6, r4]
 162 0044 FFF7FEFF 		bl	sendServoByte
 163              	.LVL14:
  66:Core/Src/servo_control.c ****     }
 164              		.loc 1 66 9 is_stmt 1 discriminator 3 view .LVU27
  66:Core/Src/servo_control.c ****     }
 165              		.loc 1 66 27 is_stmt 0 discriminator 3 view .LVU28
 166 0048 4346     		mov	r3, r8
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 11


 167 004a 1878     		ldrb	r0, [r3]
  66:Core/Src/servo_control.c ****     }
 168              		.loc 1 66 18 discriminator 3 view .LVU29
 169 004c 4519     		adds	r5, r0, r5
 170              	.LVL15:
  66:Core/Src/servo_control.c ****     }
 171              		.loc 1 66 18 discriminator 3 view .LVU30
 172 004e EDB2     		uxtb	r5, r5
 173              	.LVL16:
  63:Core/Src/servo_control.c ****     {
 174              		.loc 1 63 40 is_stmt 1 discriminator 3 view .LVU31
  63:Core/Src/servo_control.c ****     {
 175              		.loc 1 63 41 is_stmt 0 discriminator 3 view .LVU32
 176 0050 0134     		adds	r4, r4, #1
 177              	.LVL17:
  63:Core/Src/servo_control.c ****     {
 178              		.loc 1 63 41 discriminator 3 view .LVU33
 179 0052 E4B2     		uxtb	r4, r4
 180              	.LVL18:
  63:Core/Src/servo_control.c ****     {
 181              		.loc 1 63 41 discriminator 3 view .LVU34
 182 0054 F1E7     		b	.L5
 183              	.L7:
  63:Core/Src/servo_control.c ****     {
 184              		.loc 1 63 41 discriminator 3 view .LVU35
 185              	.LBE24:
  69:Core/Src/servo_control.c **** }
 186              		.loc 1 69 5 is_stmt 1 view .LVU36
 187 0056 E843     		mvns	r0, r5
 188 0058 C0B2     		uxtb	r0, r0
 189 005a FFF7FEFF 		bl	sendServoByte
 190              	.LVL19:
  70:Core/Src/servo_control.c **** 
 191              		.loc 1 70 1 is_stmt 0 view .LVU37
 192              		@ sp needed
 193              	.LVL20:
 194              	.LVL21:
 195              	.LVL22:
  70:Core/Src/servo_control.c **** 
 196              		.loc 1 70 1 view .LVU38
 197 005e 04BC     		pop	{r2}
 198 0060 9046     		mov	r8, r2
 199 0062 F0BD     		pop	{r4, r5, r6, r7, pc}
 200              		.cfi_endproc
 201              	.LFE43:
 203              		.section	.text.clearServoReceiveBuffer,"ax",%progbits
 204              		.align	1
 205              		.global	clearServoReceiveBuffer
 206              		.syntax unified
 207              		.code	16
 208              		.thumb_func
 209              		.fpu softvfp
 211              	clearServoReceiveBuffer:
 212              	.LFB58:
 386:Core/Src/servo_control.c **** 
 387:Core/Src/servo_control.c **** void clearServoReceiveBuffer (void)
 388:Core/Src/servo_control.c **** {
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 12


 213              		.loc 1 388 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 389:Core/Src/servo_control.c ****     receiveBufferStart = receiveBufferEnd;
 218              		.loc 1 389 5 view .LVU40
 219              		.loc 1 389 24 is_stmt 0 view .LVU41
 220 0000 024B     		ldr	r3, .L9
 221 0002 1A68     		ldr	r2, [r3]
 222 0004 024B     		ldr	r3, .L9+4
 223 0006 1A60     		str	r2, [r3]
 390:Core/Src/servo_control.c **** }
 224              		.loc 1 390 1 view .LVU42
 225              		@ sp needed
 226 0008 7047     		bx	lr
 227              	.L10:
 228 000a C046     		.align	2
 229              	.L9:
 230 000c 00000000 		.word	.LANCHOR0
 231 0010 00000000 		.word	.LANCHOR1
 232              		.cfi_endproc
 233              	.LFE58:
 235              		.section	.text.getServoBytesAvailable,"ax",%progbits
 236              		.align	1
 237              		.global	getServoBytesAvailable
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 241              		.fpu softvfp
 243              	getServoBytesAvailable:
 244              	.LFB59:
 391:Core/Src/servo_control.c **** 
 392:Core/Src/servo_control.c **** size_t getServoBytesAvailable (void)
 393:Core/Src/servo_control.c **** {
 245              		.loc 1 393 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 394:Core/Src/servo_control.c ****     volatile uint8_t *start = receiveBufferStart;
 250              		.loc 1 394 5 view .LVU44
 251              		.loc 1 394 23 is_stmt 0 view .LVU45
 252 0000 054B     		ldr	r3, .L14
 253 0002 1B68     		ldr	r3, [r3]
 254              	.LVL23:
 395:Core/Src/servo_control.c ****     volatile uint8_t *end = receiveBufferEnd;
 255              		.loc 1 395 5 is_stmt 1 view .LVU46
 256              		.loc 1 395 23 is_stmt 0 view .LVU47
 257 0004 054A     		ldr	r2, .L14+4
 258 0006 1068     		ldr	r0, [r2]
 259              	.LVL24:
 396:Core/Src/servo_control.c ****     
 397:Core/Src/servo_control.c ****     if (end >= start)
 260              		.loc 1 397 5 is_stmt 1 view .LVU48
 261              		.loc 1 397 8 is_stmt 0 view .LVU49
 262 0008 8342     		cmp	r3, r0
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 13


 263 000a 01D8     		bhi	.L12
 398:Core/Src/servo_control.c ****         return (size_t)(end - start);
 264              		.loc 1 398 9 is_stmt 1 view .LVU50
 265              		.loc 1 398 29 is_stmt 0 view .LVU51
 266 000c C01A     		subs	r0, r0, r3
 267              	.LVL25:
 268              	.L11:
 399:Core/Src/servo_control.c ****     else
 400:Core/Src/servo_control.c ****         return (size_t)(REC_BUFFER_LEN - (start - end));
 401:Core/Src/servo_control.c **** }
 269              		.loc 1 401 1 view .LVU52
 270              		@ sp needed
 271 000e 7047     		bx	lr
 272              	.LVL26:
 273              	.L12:
 400:Core/Src/servo_control.c **** }
 274              		.loc 1 400 9 is_stmt 1 view .LVU53
 400:Core/Src/servo_control.c **** }
 275              		.loc 1 400 49 is_stmt 0 view .LVU54
 276 0010 1B1A     		subs	r3, r3, r0
 277              	.LVL27:
 400:Core/Src/servo_control.c **** }
 278              		.loc 1 400 40 view .LVU55
 279 0012 2020     		movs	r0, #32
 280              	.LVL28:
 400:Core/Src/servo_control.c **** }
 281              		.loc 1 400 40 view .LVU56
 282 0014 C01A     		subs	r0, r0, r3
 400:Core/Src/servo_control.c **** }
 283              		.loc 1 400 16 view .LVU57
 284 0016 FAE7     		b	.L11
 285              	.L15:
 286              		.align	2
 287              	.L14:
 288 0018 00000000 		.word	.LANCHOR1
 289 001c 00000000 		.word	.LANCHOR0
 290              		.cfi_endproc
 291              	.LFE59:
 293              		.section	.text.getServoByte,"ax",%progbits
 294              		.align	1
 295              		.global	getServoByte
 296              		.syntax unified
 297              		.code	16
 298              		.thumb_func
 299              		.fpu softvfp
 301              	getServoByte:
 302              	.LFB60:
 402:Core/Src/servo_control.c **** 
 403:Core/Src/servo_control.c **** uint8_t getServoByte (void)
 404:Core/Src/servo_control.c **** {
 303              		.loc 1 404 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 405:Core/Src/servo_control.c ****     receiveBufferStart++;
 308              		.loc 1 405 5 view .LVU59
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 14


 309              		.loc 1 405 23 is_stmt 0 view .LVU60
 310 0000 074B     		ldr	r3, .L18
 311 0002 1A68     		ldr	r2, [r3]
 312 0004 0132     		adds	r2, r2, #1
 313 0006 1A60     		str	r2, [r3]
 406:Core/Src/servo_control.c ****     if (receiveBufferStart >= receiveBuffer + REC_BUFFER_LEN)
 314              		.loc 1 406 5 is_stmt 1 view .LVU61
 315              		.loc 1 406 28 is_stmt 0 view .LVU62
 316 0008 1A68     		ldr	r2, [r3]
 317              		.loc 1 406 8 view .LVU63
 318 000a 064B     		ldr	r3, .L18+4
 319 000c 9A42     		cmp	r2, r3
 320 000e 02D3     		bcc	.L17
 407:Core/Src/servo_control.c ****         receiveBufferStart = receiveBuffer;
 321              		.loc 1 407 9 is_stmt 1 view .LVU64
 322              		.loc 1 407 28 is_stmt 0 view .LVU65
 323 0010 034B     		ldr	r3, .L18
 324 0012 054A     		ldr	r2, .L18+8
 325 0014 1A60     		str	r2, [r3]
 326              	.L17:
 408:Core/Src/servo_control.c ****     
 409:Core/Src/servo_control.c ****     return *receiveBufferStart;
 327              		.loc 1 409 5 is_stmt 1 view .LVU66
 328              		.loc 1 409 12 is_stmt 0 view .LVU67
 329 0016 024B     		ldr	r3, .L18
 330 0018 1B68     		ldr	r3, [r3]
 331 001a 1878     		ldrb	r0, [r3]
 332 001c C0B2     		uxtb	r0, r0
 410:Core/Src/servo_control.c **** }
 333              		.loc 1 410 1 view .LVU68
 334              		@ sp needed
 335 001e 7047     		bx	lr
 336              	.L19:
 337              		.align	2
 338              	.L18:
 339 0020 00000000 		.word	.LANCHOR1
 340 0024 20000000 		.word	receiveBuffer+32
 341 0028 00000000 		.word	receiveBuffer
 342              		.cfi_endproc
 343              	.LFE60:
 345              		.section	.text.getServoResponse,"ax",%progbits
 346              		.align	1
 347              		.global	getServoResponse
 348              		.syntax unified
 349              		.code	16
 350              		.thumb_func
 351              		.fpu softvfp
 353              	getServoResponse:
 354              	.LFB44:
  73:Core/Src/servo_control.c ****     uint8_t retries = 0;
 355              		.loc 1 73 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 10B5     		push	{r4, lr}
 360              	.LCFI4:
 361              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 15


 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
  74:Core/Src/servo_control.c ****     
 364              		.loc 1 74 5 view .LVU70
 365              	.LVL29:
  76:Core/Src/servo_control.c ****     
 366              		.loc 1 76 5 view .LVU71
 367 0002 FFF7FEFF 		bl	clearServoReceiveBuffer
 368              	.LVL30:
  78:Core/Src/servo_control.c ****     {
 369              		.loc 1 78 5 view .LVU72
  74:Core/Src/servo_control.c ****     
 370              		.loc 1 74 13 is_stmt 0 view .LVU73
 371 0006 0024     		movs	r4, #0
 372              	.LVL31:
 373              	.L21:
  78:Core/Src/servo_control.c ****     {
 374              		.loc 1 78 11 is_stmt 1 view .LVU74
  78:Core/Src/servo_control.c ****     {
 375              		.loc 1 78 12 is_stmt 0 view .LVU75
 376 0008 FFF7FEFF 		bl	getServoBytesAvailable
 377              	.LVL32:
  78:Core/Src/servo_control.c ****     {
 378              		.loc 1 78 11 view .LVU76
 379 000c 0328     		cmp	r0, #3
 380 000e 05D8     		bhi	.L34
  80:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
 381              		.loc 1 80 9 is_stmt 1 view .LVU77
  80:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
 382              		.loc 1 80 16 is_stmt 0 view .LVU78
 383 0010 0134     		adds	r4, r4, #1
 384              	.LVL33:
  80:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
 385              		.loc 1 80 16 view .LVU79
 386 0012 E4B2     		uxtb	r4, r4
 387              	.LVL34:
  81:Core/Src/servo_control.c ****         {
 388              		.loc 1 81 9 is_stmt 1 view .LVU80
  81:Core/Src/servo_control.c ****         {
 389              		.loc 1 81 12 is_stmt 0 view .LVU81
 390 0014 C82C     		cmp	r4, #200
 391 0016 F7D9     		bls	.L21
  86:Core/Src/servo_control.c ****         }
 392              		.loc 1 86 20 view .LVU82
 393 0018 0020     		movs	r0, #0
 394 001a 48E0     		b	.L22
 395              	.L34:
  91:Core/Src/servo_control.c ****     
 396              		.loc 1 91 5 is_stmt 1 view .LVU83
 397              	.LVL35:
  93:Core/Src/servo_control.c ****     getServoByte();
 398              		.loc 1 93 5 view .LVU84
 399 001c FFF7FEFF 		bl	getServoByte
 400              	.LVL36:
  94:Core/Src/servo_control.c ****     
 401              		.loc 1 94 5 view .LVU85
 402 0020 FFF7FEFF 		bl	getServoByte
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 16


 403              	.LVL37:
  96:Core/Src/servo_control.c ****     response.length = getServoByte();
 404              		.loc 1 96 5 view .LVU86
  96:Core/Src/servo_control.c ****     response.length = getServoByte();
 405              		.loc 1 96 19 is_stmt 0 view .LVU87
 406 0024 FFF7FEFF 		bl	getServoByte
 407              	.LVL38:
  96:Core/Src/servo_control.c ****     response.length = getServoByte();
 408              		.loc 1 96 17 view .LVU88
 409 0028 224C     		ldr	r4, .L36
 410 002a 2070     		strb	r0, [r4]
  97:Core/Src/servo_control.c ****     
 411              		.loc 1 97 5 is_stmt 1 view .LVU89
  97:Core/Src/servo_control.c ****     
 412              		.loc 1 97 23 is_stmt 0 view .LVU90
 413 002c FFF7FEFF 		bl	getServoByte
 414              	.LVL39:
  97:Core/Src/servo_control.c ****     
 415              		.loc 1 97 21 view .LVU91
 416 0030 6070     		strb	r0, [r4, #1]
  99:Core/Src/servo_control.c ****     {
 417              		.loc 1 99 5 is_stmt 1 view .LVU92
  99:Core/Src/servo_control.c ****     {
 418              		.loc 1 99 8 is_stmt 0 view .LVU93
 419 0032 1B28     		cmp	r0, #27
 420 0034 3AD8     		bhi	.L31
  91:Core/Src/servo_control.c ****     
 421              		.loc 1 91 13 view .LVU94
 422 0036 0024     		movs	r4, #0
 423              	.LVL40:
 424              	.L24:
 107:Core/Src/servo_control.c ****     {
 425              		.loc 1 107 11 is_stmt 1 view .LVU95
 107:Core/Src/servo_control.c ****     {
 426              		.loc 1 107 12 is_stmt 0 view .LVU96
 427 0038 FFF7FEFF 		bl	getServoBytesAvailable
 428              	.LVL41:
 107:Core/Src/servo_control.c ****     {
 429              		.loc 1 107 47 view .LVU97
 430 003c 1D4B     		ldr	r3, .L36
 431 003e 5B78     		ldrb	r3, [r3, #1]
 107:Core/Src/servo_control.c ****     {
 432              		.loc 1 107 11 view .LVU98
 433 0040 9842     		cmp	r0, r3
 434 0042 05D2     		bcs	.L35
 109:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
 435              		.loc 1 109 9 is_stmt 1 view .LVU99
 109:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
 436              		.loc 1 109 16 is_stmt 0 view .LVU100
 437 0044 0134     		adds	r4, r4, #1
 438              	.LVL42:
 109:Core/Src/servo_control.c ****         if (retries > REC_WAIT_MAX_RETRIES)
 439              		.loc 1 109 16 view .LVU101
 440 0046 E4B2     		uxtb	r4, r4
 441              	.LVL43:
 110:Core/Src/servo_control.c ****         {
 442              		.loc 1 110 9 is_stmt 1 view .LVU102
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 17


 110:Core/Src/servo_control.c ****         {
 443              		.loc 1 110 12 is_stmt 0 view .LVU103
 444 0048 C82C     		cmp	r4, #200
 445 004a F5D9     		bls	.L24
 115:Core/Src/servo_control.c ****         }
 446              		.loc 1 115 20 view .LVU104
 447 004c 0020     		movs	r0, #0
 448 004e 2EE0     		b	.L22
 449              	.L35:
 121:Core/Src/servo_control.c ****     servoErrorCode = response.error;
 450              		.loc 1 121 5 is_stmt 1 view .LVU105
 121:Core/Src/servo_control.c ****     servoErrorCode = response.error;
 451              		.loc 1 121 22 is_stmt 0 view .LVU106
 452 0050 FFF7FEFF 		bl	getServoByte
 453              	.LVL44:
 121:Core/Src/servo_control.c ****     servoErrorCode = response.error;
 454              		.loc 1 121 20 view .LVU107
 455 0054 174B     		ldr	r3, .L36
 456 0056 9870     		strb	r0, [r3, #2]
 122:Core/Src/servo_control.c ****     
 457              		.loc 1 122 5 is_stmt 1 view .LVU108
 122:Core/Src/servo_control.c ****     
 458              		.loc 1 122 20 is_stmt 0 view .LVU109
 459 0058 174B     		ldr	r3, .L36+4
 460 005a 1870     		strb	r0, [r3]
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 461              		.loc 1 124 5 is_stmt 1 view .LVU110
 462              	.LBB25:
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 463              		.loc 1 124 10 view .LVU111
 464              	.LVL45:
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 465              		.loc 1 124 18 is_stmt 0 view .LVU112
 466 005c 0024     		movs	r4, #0
 467              	.LVL46:
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 468              		.loc 1 124 5 view .LVU113
 469 005e 06E0     		b	.L26
 470              	.LVL47:
 471              	.L27:
 125:Core/Src/servo_control.c ****     
 472              		.loc 1 125 9 is_stmt 1 discriminator 3 view .LVU114
 125:Core/Src/servo_control.c ****     
 473              		.loc 1 125 30 is_stmt 0 discriminator 3 view .LVU115
 474 0060 FFF7FEFF 		bl	getServoByte
 475              	.LVL48:
 125:Core/Src/servo_control.c ****     
 476              		.loc 1 125 28 discriminator 3 view .LVU116
 477 0064 134B     		ldr	r3, .L36
 478 0066 1B19     		adds	r3, r3, r4
 479 0068 D870     		strb	r0, [r3, #3]
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 480              		.loc 1 124 50 is_stmt 1 discriminator 3 view .LVU117
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 481              		.loc 1 124 51 is_stmt 0 discriminator 3 view .LVU118
 482 006a 0134     		adds	r4, r4, #1
 483              	.LVL49:
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 18


 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 484              		.loc 1 124 51 discriminator 3 view .LVU119
 485 006c E4B2     		uxtb	r4, r4
 486              	.LVL50:
 487              	.L26:
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 488              		.loc 1 124 25 is_stmt 1 discriminator 1 view .LVU120
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 489              		.loc 1 124 37 is_stmt 0 discriminator 1 view .LVU121
 490 006e 114B     		ldr	r3, .L36
 491 0070 5B78     		ldrb	r3, [r3, #1]
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 492              		.loc 1 124 45 discriminator 1 view .LVU122
 493 0072 981E     		subs	r0, r3, #2
 124:Core/Src/servo_control.c ****         response.params[i] = getServoByte();
 494              		.loc 1 124 5 discriminator 1 view .LVU123
 495 0074 8442     		cmp	r4, r0
 496 0076 F3DB     		blt	.L27
 497              	.LBE25:
 128:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < response.length - 2; i++)
 498              		.loc 1 128 5 is_stmt 1 view .LVU124
 128:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < response.length - 2; i++)
 499              		.loc 1 128 36 is_stmt 0 view .LVU125
 500 0078 0E4A     		ldr	r2, .L36
 501 007a 1178     		ldrb	r1, [r2]
 128:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < response.length - 2; i++)
 502              		.loc 1 128 40 view .LVU126
 503 007c 5B18     		adds	r3, r3, r1
 504 007e DBB2     		uxtb	r3, r3
 128:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < response.length - 2; i++)
 505              		.loc 1 128 68 view .LVU127
 506 0080 9278     		ldrb	r2, [r2, #2]
 128:Core/Src/servo_control.c ****     for (uint8_t i = 0; i < response.length - 2; i++)
 507              		.loc 1 128 13 view .LVU128
 508 0082 9B18     		adds	r3, r3, r2
 509 0084 DBB2     		uxtb	r3, r3
 510              	.LVL51:
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 511              		.loc 1 129 5 is_stmt 1 view .LVU129
 512              	.LBB26:
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 513              		.loc 1 129 10 view .LVU130
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 514              		.loc 1 129 18 is_stmt 0 view .LVU131
 515 0086 0022     		movs	r2, #0
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 516              		.loc 1 129 5 view .LVU132
 517 0088 06E0     		b	.L28
 518              	.LVL52:
 519              	.L29:
 130:Core/Src/servo_control.c ****     calcChecksum = ~calcChecksum;
 520              		.loc 1 130 9 is_stmt 1 discriminator 3 view .LVU133
 130:Core/Src/servo_control.c ****     calcChecksum = ~calcChecksum;
 521              		.loc 1 130 40 is_stmt 0 discriminator 3 view .LVU134
 522 008a 0A49     		ldr	r1, .L36
 523 008c 8918     		adds	r1, r1, r2
 524 008e C978     		ldrb	r1, [r1, #3]
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 19


 130:Core/Src/servo_control.c ****     calcChecksum = ~calcChecksum;
 525              		.loc 1 130 22 discriminator 3 view .LVU135
 526 0090 CB18     		adds	r3, r1, r3
 527              	.LVL53:
 130:Core/Src/servo_control.c ****     calcChecksum = ~calcChecksum;
 528              		.loc 1 130 22 discriminator 3 view .LVU136
 529 0092 DBB2     		uxtb	r3, r3
 530              	.LVL54:
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 531              		.loc 1 129 50 is_stmt 1 discriminator 3 view .LVU137
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 532              		.loc 1 129 51 is_stmt 0 discriminator 3 view .LVU138
 533 0094 0132     		adds	r2, r2, #1
 534              	.LVL55:
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 535              		.loc 1 129 51 discriminator 3 view .LVU139
 536 0096 D2B2     		uxtb	r2, r2
 537              	.LVL56:
 538              	.L28:
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 539              		.loc 1 129 25 is_stmt 1 discriminator 1 view .LVU140
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 540              		.loc 1 129 5 is_stmt 0 discriminator 1 view .LVU141
 541 0098 9042     		cmp	r0, r2
 542 009a F6DC     		bgt	.L29
 129:Core/Src/servo_control.c ****         calcChecksum += response.params[i];
 543              		.loc 1 129 5 discriminator 1 view .LVU142
 544              	.LBE26:
 131:Core/Src/servo_control.c ****     
 545              		.loc 1 131 5 is_stmt 1 view .LVU143
 131:Core/Src/servo_control.c ****     
 546              		.loc 1 131 18 is_stmt 0 view .LVU144
 547 009c DB43     		mvns	r3, r3
 548              	.LVL57:
 131:Core/Src/servo_control.c ****     
 549              		.loc 1 131 18 view .LVU145
 550 009e DCB2     		uxtb	r4, r3
 551              	.LVL58:
 133:Core/Src/servo_control.c ****     if (calcChecksum != recChecksum)
 552              		.loc 1 133 5 is_stmt 1 view .LVU146
 133:Core/Src/servo_control.c ****     if (calcChecksum != recChecksum)
 553              		.loc 1 133 33 is_stmt 0 view .LVU147
 554 00a0 FFF7FEFF 		bl	getServoByte
 555              	.LVL59:
 134:Core/Src/servo_control.c ****     {
 556              		.loc 1 134 5 is_stmt 1 view .LVU148
 134:Core/Src/servo_control.c ****     {
 557              		.loc 1 134 8 is_stmt 0 view .LVU149
 558 00a4 8442     		cmp	r4, r0
 559 00a6 03D1     		bne	.L33
 142:Core/Src/servo_control.c **** }
 560              		.loc 1 142 12 view .LVU150
 561 00a8 0120     		movs	r0, #1
 562              	.LVL60:
 142:Core/Src/servo_control.c **** }
 563              		.loc 1 142 12 view .LVU151
 564 00aa 00E0     		b	.L22
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 20


 565              	.LVL61:
 566              	.L31:
 104:Core/Src/servo_control.c ****     }
 567              		.loc 1 104 16 view .LVU152
 568 00ac 0020     		movs	r0, #0
 569              	.LVL62:
 570              	.L22:
 143:Core/Src/servo_control.c **** 
 571              		.loc 1 143 1 view .LVU153
 572              		@ sp needed
 573 00ae 10BD     		pop	{r4, pc}
 574              	.LVL63:
 575              	.L33:
 139:Core/Src/servo_control.c ****     }
 576              		.loc 1 139 16 view .LVU154
 577 00b0 0020     		movs	r0, #0
 578              	.LVL64:
 139:Core/Src/servo_control.c ****     }
 579              		.loc 1 139 16 view .LVU155
 580 00b2 FCE7     		b	.L22
 581              	.L37:
 582              		.align	2
 583              	.L36:
 584 00b4 00000000 		.word	response
 585 00b8 00000000 		.word	.LANCHOR2
 586              		.cfi_endproc
 587              	.LFE44:
 589              		.section	.text.pingServo,"ax",%progbits
 590              		.align	1
 591              		.global	pingServo
 592              		.syntax unified
 593              		.code	16
 594              		.thumb_func
 595              		.fpu softvfp
 597              	pingServo:
 598              	.LVL65:
 599              	.LFB46:
 176:Core/Src/servo_control.c ****     sendServoCommand (servoId, PING, 0, 0);
 600              		.loc 1 176 1 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 176:Core/Src/servo_control.c ****     sendServoCommand (servoId, PING, 0, 0);
 604              		.loc 1 176 1 is_stmt 0 view .LVU157
 605 0000 10B5     		push	{r4, lr}
 606              	.LCFI5:
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 4, -8
 609              		.cfi_offset 14, -4
 610 0002 0400     		movs	r4, r0
 177:Core/Src/servo_control.c ****     
 611              		.loc 1 177 5 is_stmt 1 view .LVU158
 612 0004 0023     		movs	r3, #0
 613 0006 0022     		movs	r2, #0
 614 0008 0121     		movs	r1, #1
 615 000a FFF7FEFF 		bl	sendServoCommand
 616              	.LVL66:
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 21


 179:Core/Src/servo_control.c ****         return false;
 617              		.loc 1 179 5 view .LVU159
 618              	.LBB27:
 619              	.LBI27:
 145:Core/Src/servo_control.c **** {
 620              		.loc 1 145 13 view .LVU160
 621              	.LBB28:
 147:Core/Src/servo_control.c ****     {
 622              		.loc 1 147 5 view .LVU161
 147:Core/Src/servo_control.c ****     {
 623              		.loc 1 147 10 is_stmt 0 view .LVU162
 624 000e FFF7FEFF 		bl	getServoResponse
 625              	.LVL67:
 147:Core/Src/servo_control.c ****     {
 626              		.loc 1 147 8 view .LVU163
 627 0012 0028     		cmp	r0, #0
 628 0014 09D0     		beq	.L40
 155:Core/Src/servo_control.c ****     {
 629              		.loc 1 155 5 is_stmt 1 view .LVU164
 155:Core/Src/servo_control.c ****     {
 630              		.loc 1 155 17 is_stmt 0 view .LVU165
 631 0016 074B     		ldr	r3, .L43
 632 0018 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 633              		.loc 1 155 8 view .LVU166
 634 001a 9C42     		cmp	r4, r3
 635 001c 07D1     		bne	.L41
 163:Core/Src/servo_control.c ****     {
 636              		.loc 1 163 5 is_stmt 1 view .LVU167
 163:Core/Src/servo_control.c ****     {
 637              		.loc 1 163 17 is_stmt 0 view .LVU168
 638 001e 054B     		ldr	r3, .L43
 639 0020 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 640              		.loc 1 163 8 view .LVU169
 641 0022 002B     		cmp	r3, #0
 642 0024 02D0     		beq	.L39
 643              	.LBE28:
 644              	.LBE27:
 180:Core/Src/servo_control.c ****     
 645              		.loc 1 180 16 view .LVU170
 646 0026 0020     		movs	r0, #0
 647 0028 00E0     		b	.L39
 648              	.L40:
 649 002a 0020     		movs	r0, #0
 650              	.L39:
 651              	.LVL68:
 183:Core/Src/servo_control.c **** 
 652              		.loc 1 183 1 view .LVU171
 653              		@ sp needed
 654 002c 10BD     		pop	{r4, pc}
 655              	.LVL69:
 656              	.L41:
 180:Core/Src/servo_control.c ****     
 657              		.loc 1 180 16 view .LVU172
 658 002e 0020     		movs	r0, #0
 659 0030 FCE7     		b	.L39
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 22


 660              	.L44:
 661 0032 C046     		.align	2
 662              	.L43:
 663 0034 00000000 		.word	response
 664              		.cfi_endproc
 665              	.LFE46:
 667              		.section	.text.setServoReturnDelayMicros,"ax",%progbits
 668              		.align	1
 669              		.global	setServoReturnDelayMicros
 670              		.syntax unified
 671              		.code	16
 672              		.thumb_func
 673              		.fpu softvfp
 675              	setServoReturnDelayMicros:
 676              	.LVL70:
 677              	.LFB47:
 187:Core/Src/servo_control.c ****     if (micros > 510)
 678              		.loc 1 187 1 is_stmt 1 view -0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 8
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 187:Core/Src/servo_control.c ****     if (micros > 510)
 682              		.loc 1 187 1 is_stmt 0 view .LVU174
 683 0000 10B5     		push	{r4, lr}
 684              	.LCFI6:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 4, -8
 687              		.cfi_offset 14, -4
 688 0002 82B0     		sub	sp, sp, #8
 689              	.LCFI7:
 690              		.cfi_def_cfa_offset 16
 691 0004 0400     		movs	r4, r0
 188:Core/Src/servo_control.c ****         return false;
 692              		.loc 1 188 5 is_stmt 1 view .LVU175
 188:Core/Src/servo_control.c ****         return false;
 693              		.loc 1 188 8 is_stmt 0 view .LVU176
 694 0006 FF23     		movs	r3, #255
 695 0008 5B00     		lsls	r3, r3, #1
 696 000a 9942     		cmp	r1, r3
 697 000c 02D9     		bls	.L51
 189:Core/Src/servo_control.c ****     
 698              		.loc 1 189 16 view .LVU177
 699 000e 0020     		movs	r0, #0
 700              	.LVL71:
 701              	.L46:
 200:Core/Src/servo_control.c **** 
 702              		.loc 1 200 1 view .LVU178
 703 0010 02B0     		add	sp, sp, #8
 704              		@ sp needed
 705 0012 10BD     		pop	{r4, pc}
 706              	.LVL72:
 707              	.L51:
 191:Core/Src/servo_control.c ****                                (uint8_t)((micros / 2) & 0xff)};
 708              		.loc 1 191 5 is_stmt 1 view .LVU179
 191:Core/Src/servo_control.c ****                                (uint8_t)((micros / 2) & 0xff)};
 709              		.loc 1 191 19 is_stmt 0 view .LVU180
 710 0014 FA3B     		subs	r3, r3, #250
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 23


 711 0016 FF3B     		subs	r3, r3, #255
 712 0018 6A46     		mov	r2, sp
 713 001a 1371     		strb	r3, [r2, #4]
 192:Core/Src/servo_control.c ****     
 714              		.loc 1 192 32 view .LVU181
 715 001c 4908     		lsrs	r1, r1, #1
 716              	.LVL73:
 191:Core/Src/servo_control.c ****                                (uint8_t)((micros / 2) & 0xff)};
 717              		.loc 1 191 19 view .LVU182
 718 001e 5171     		strb	r1, [r2, #5]
 194:Core/Src/servo_control.c ****     
 719              		.loc 1 194 5 is_stmt 1 view .LVU183
 720 0020 01AB     		add	r3, sp, #4
 721 0022 0222     		movs	r2, #2
 722 0024 0321     		movs	r1, #3
 723 0026 FFF7FEFF 		bl	sendServoCommand
 724              	.LVL74:
 196:Core/Src/servo_control.c ****         return false;
 725              		.loc 1 196 5 view .LVU184
 726              	.LBB29:
 727              	.LBI29:
 145:Core/Src/servo_control.c **** {
 728              		.loc 1 145 13 view .LVU185
 729              	.LBB30:
 147:Core/Src/servo_control.c ****     {
 730              		.loc 1 147 5 view .LVU186
 147:Core/Src/servo_control.c ****     {
 731              		.loc 1 147 10 is_stmt 0 view .LVU187
 732 002a FFF7FEFF 		bl	getServoResponse
 733              	.LVL75:
 147:Core/Src/servo_control.c ****     {
 734              		.loc 1 147 8 view .LVU188
 735 002e 0028     		cmp	r0, #0
 736 0030 09D0     		beq	.L48
 155:Core/Src/servo_control.c ****     {
 737              		.loc 1 155 5 is_stmt 1 view .LVU189
 155:Core/Src/servo_control.c ****     {
 738              		.loc 1 155 17 is_stmt 0 view .LVU190
 739 0032 074B     		ldr	r3, .L52
 740 0034 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 741              		.loc 1 155 8 view .LVU191
 742 0036 9C42     		cmp	r4, r3
 743 0038 07D1     		bne	.L49
 163:Core/Src/servo_control.c ****     {
 744              		.loc 1 163 5 is_stmt 1 view .LVU192
 163:Core/Src/servo_control.c ****     {
 745              		.loc 1 163 17 is_stmt 0 view .LVU193
 746 003a 054B     		ldr	r3, .L52
 747 003c 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 748              		.loc 1 163 8 view .LVU194
 749 003e 002B     		cmp	r3, #0
 750 0040 E6D0     		beq	.L46
 751              	.LBE30:
 752              	.LBE29:
 197:Core/Src/servo_control.c ****     
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 24


 753              		.loc 1 197 16 view .LVU195
 754 0042 0020     		movs	r0, #0
 755 0044 E4E7     		b	.L46
 756              	.L48:
 757 0046 0020     		movs	r0, #0
 758 0048 E2E7     		b	.L46
 759              	.L49:
 760 004a 0020     		movs	r0, #0
 761 004c E0E7     		b	.L46
 762              	.L53:
 763 004e C046     		.align	2
 764              	.L52:
 765 0050 00000000 		.word	response
 766              		.cfi_endproc
 767              	.LFE47:
 769              		.section	.text.setServoBlinkConditions,"ax",%progbits
 770              		.align	1
 771              		.global	setServoBlinkConditions
 772              		.syntax unified
 773              		.code	16
 774              		.thumb_func
 775              		.fpu softvfp
 777              	setServoBlinkConditions:
 778              	.LVL76:
 779              	.LFB48:
 205:Core/Src/servo_control.c ****     const uint8_t params[2] = {BLINK_CONDITIONS,
 780              		.loc 1 205 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 8
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Core/Src/servo_control.c ****     const uint8_t params[2] = {BLINK_CONDITIONS,
 784              		.loc 1 205 1 is_stmt 0 view .LVU197
 785 0000 10B5     		push	{r4, lr}
 786              	.LCFI8:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 4, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              	.LCFI9:
 792              		.cfi_def_cfa_offset 16
 793 0004 0400     		movs	r4, r0
 206:Core/Src/servo_control.c ****                                flags};
 794              		.loc 1 206 5 is_stmt 1 view .LVU198
 206:Core/Src/servo_control.c ****                                flags};
 795              		.loc 1 206 19 is_stmt 0 view .LVU199
 796 0006 1123     		movs	r3, #17
 797 0008 6A46     		mov	r2, sp
 798 000a 1371     		strb	r3, [r2, #4]
 799 000c 5171     		strb	r1, [r2, #5]
 209:Core/Src/servo_control.c ****     
 800              		.loc 1 209 5 is_stmt 1 view .LVU200
 801 000e 01AB     		add	r3, sp, #4
 802 0010 0222     		movs	r2, #2
 803 0012 0321     		movs	r1, #3
 804              	.LVL77:
 209:Core/Src/servo_control.c ****     
 805              		.loc 1 209 5 is_stmt 0 view .LVU201
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 25


 806 0014 FFF7FEFF 		bl	sendServoCommand
 807              	.LVL78:
 211:Core/Src/servo_control.c ****         return false;
 808              		.loc 1 211 5 is_stmt 1 view .LVU202
 809              	.LBB31:
 810              	.LBI31:
 145:Core/Src/servo_control.c **** {
 811              		.loc 1 145 13 view .LVU203
 812              	.LBB32:
 147:Core/Src/servo_control.c ****     {
 813              		.loc 1 147 5 view .LVU204
 147:Core/Src/servo_control.c ****     {
 814              		.loc 1 147 10 is_stmt 0 view .LVU205
 815 0018 FFF7FEFF 		bl	getServoResponse
 816              	.LVL79:
 147:Core/Src/servo_control.c ****     {
 817              		.loc 1 147 8 view .LVU206
 818 001c 0028     		cmp	r0, #0
 819 001e 09D0     		beq	.L56
 155:Core/Src/servo_control.c ****     {
 820              		.loc 1 155 5 is_stmt 1 view .LVU207
 155:Core/Src/servo_control.c ****     {
 821              		.loc 1 155 17 is_stmt 0 view .LVU208
 822 0020 074B     		ldr	r3, .L59
 823 0022 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 824              		.loc 1 155 8 view .LVU209
 825 0024 9C42     		cmp	r4, r3
 826 0026 08D1     		bne	.L57
 163:Core/Src/servo_control.c ****     {
 827              		.loc 1 163 5 is_stmt 1 view .LVU210
 163:Core/Src/servo_control.c ****     {
 828              		.loc 1 163 17 is_stmt 0 view .LVU211
 829 0028 054B     		ldr	r3, .L59
 830 002a 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 831              		.loc 1 163 8 view .LVU212
 832 002c 002B     		cmp	r3, #0
 833 002e 02D0     		beq	.L55
 834              	.LBE32:
 835              	.LBE31:
 212:Core/Src/servo_control.c ****     
 836              		.loc 1 212 16 view .LVU213
 837 0030 0020     		movs	r0, #0
 838 0032 00E0     		b	.L55
 839              	.L56:
 840 0034 0020     		movs	r0, #0
 841              	.L55:
 842              	.LVL80:
 215:Core/Src/servo_control.c **** 
 843              		.loc 1 215 1 view .LVU214
 844 0036 02B0     		add	sp, sp, #8
 845              		@ sp needed
 846 0038 10BD     		pop	{r4, pc}
 847              	.LVL81:
 848              	.L57:
 212:Core/Src/servo_control.c ****     
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 26


 849              		.loc 1 212 16 view .LVU215
 850 003a 0020     		movs	r0, #0
 851 003c FBE7     		b	.L55
 852              	.L60:
 853 003e C046     		.align	2
 854              	.L59:
 855 0040 00000000 		.word	response
 856              		.cfi_endproc
 857              	.LFE48:
 859              		.section	.text.setServoShutdownConditions,"ax",%progbits
 860              		.align	1
 861              		.global	setServoShutdownConditions
 862              		.syntax unified
 863              		.code	16
 864              		.thumb_func
 865              		.fpu softvfp
 867              	setServoShutdownConditions:
 868              	.LVL82:
 869              	.LFB49:
 220:Core/Src/servo_control.c ****     const uint8_t params[2] = {SHUTDOWN_CONDITIONS,
 870              		.loc 1 220 1 is_stmt 1 view -0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 8
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 220:Core/Src/servo_control.c ****     const uint8_t params[2] = {SHUTDOWN_CONDITIONS,
 874              		.loc 1 220 1 is_stmt 0 view .LVU217
 875 0000 10B5     		push	{r4, lr}
 876              	.LCFI10:
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 4, -8
 879              		.cfi_offset 14, -4
 880 0002 82B0     		sub	sp, sp, #8
 881              	.LCFI11:
 882              		.cfi_def_cfa_offset 16
 883 0004 0400     		movs	r4, r0
 221:Core/Src/servo_control.c ****                                flags};
 884              		.loc 1 221 5 is_stmt 1 view .LVU218
 221:Core/Src/servo_control.c ****                                flags};
 885              		.loc 1 221 19 is_stmt 0 view .LVU219
 886 0006 1223     		movs	r3, #18
 887 0008 6A46     		mov	r2, sp
 888 000a 1371     		strb	r3, [r2, #4]
 889 000c 5171     		strb	r1, [r2, #5]
 224:Core/Src/servo_control.c ****     
 890              		.loc 1 224 5 is_stmt 1 view .LVU220
 891 000e 01AB     		add	r3, sp, #4
 892 0010 0222     		movs	r2, #2
 893 0012 0321     		movs	r1, #3
 894              	.LVL83:
 224:Core/Src/servo_control.c ****     
 895              		.loc 1 224 5 is_stmt 0 view .LVU221
 896 0014 FFF7FEFF 		bl	sendServoCommand
 897              	.LVL84:
 226:Core/Src/servo_control.c ****         return false;
 898              		.loc 1 226 5 is_stmt 1 view .LVU222
 899              	.LBB33:
 900              	.LBI33:
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 27


 145:Core/Src/servo_control.c **** {
 901              		.loc 1 145 13 view .LVU223
 902              	.LBB34:
 147:Core/Src/servo_control.c ****     {
 903              		.loc 1 147 5 view .LVU224
 147:Core/Src/servo_control.c ****     {
 904              		.loc 1 147 10 is_stmt 0 view .LVU225
 905 0018 FFF7FEFF 		bl	getServoResponse
 906              	.LVL85:
 147:Core/Src/servo_control.c ****     {
 907              		.loc 1 147 8 view .LVU226
 908 001c 0028     		cmp	r0, #0
 909 001e 09D0     		beq	.L63
 155:Core/Src/servo_control.c ****     {
 910              		.loc 1 155 5 is_stmt 1 view .LVU227
 155:Core/Src/servo_control.c ****     {
 911              		.loc 1 155 17 is_stmt 0 view .LVU228
 912 0020 074B     		ldr	r3, .L66
 913 0022 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 914              		.loc 1 155 8 view .LVU229
 915 0024 9C42     		cmp	r4, r3
 916 0026 08D1     		bne	.L64
 163:Core/Src/servo_control.c ****     {
 917              		.loc 1 163 5 is_stmt 1 view .LVU230
 163:Core/Src/servo_control.c ****     {
 918              		.loc 1 163 17 is_stmt 0 view .LVU231
 919 0028 054B     		ldr	r3, .L66
 920 002a 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 921              		.loc 1 163 8 view .LVU232
 922 002c 002B     		cmp	r3, #0
 923 002e 02D0     		beq	.L62
 924              	.LBE34:
 925              	.LBE33:
 227:Core/Src/servo_control.c ****     
 926              		.loc 1 227 16 view .LVU233
 927 0030 0020     		movs	r0, #0
 928 0032 00E0     		b	.L62
 929              	.L63:
 930 0034 0020     		movs	r0, #0
 931              	.L62:
 932              	.LVL86:
 230:Core/Src/servo_control.c **** 
 933              		.loc 1 230 1 view .LVU234
 934 0036 02B0     		add	sp, sp, #8
 935              		@ sp needed
 936 0038 10BD     		pop	{r4, pc}
 937              	.LVL87:
 938              	.L64:
 227:Core/Src/servo_control.c ****     
 939              		.loc 1 227 16 view .LVU235
 940 003a 0020     		movs	r0, #0
 941 003c FBE7     		b	.L62
 942              	.L67:
 943 003e C046     		.align	2
 944              	.L66:
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 28


 945 0040 00000000 		.word	response
 946              		.cfi_endproc
 947              	.LFE49:
 949              		.section	.text.setServoTorque,"ax",%progbits
 950              		.align	1
 951              		.global	setServoTorque
 952              		.syntax unified
 953              		.code	16
 954              		.thumb_func
 955              		.fpu softvfp
 957              	setServoTorque:
 958              	.LVL88:
 959              	.LFB50:
 236:Core/Src/servo_control.c ****     const uint8_t highByte = (uint8_t)((torqueValue >> 8) & 0xff);
 960              		.loc 1 236 1 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 8
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 236:Core/Src/servo_control.c ****     const uint8_t highByte = (uint8_t)((torqueValue >> 8) & 0xff);
 964              		.loc 1 236 1 is_stmt 0 view .LVU237
 965 0000 10B5     		push	{r4, lr}
 966              	.LCFI12:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 4, -8
 969              		.cfi_offset 14, -4
 970 0002 82B0     		sub	sp, sp, #8
 971              	.LCFI13:
 972              		.cfi_def_cfa_offset 16
 973 0004 0400     		movs	r4, r0
 237:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(torqueValue & 0xff);
 974              		.loc 1 237 5 is_stmt 1 view .LVU238
 237:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(torqueValue & 0xff);
 975              		.loc 1 237 19 is_stmt 0 view .LVU239
 976 0006 0A0A     		lsrs	r2, r1, #8
 977              	.LVL89:
 238:Core/Src/servo_control.c ****     
 978              		.loc 1 238 5 is_stmt 1 view .LVU240
 238:Core/Src/servo_control.c ****     
 979              		.loc 1 238 19 is_stmt 0 view .LVU241
 980 0008 C8B2     		uxtb	r0, r1
 981              	.LVL90:
 240:Core/Src/servo_control.c ****         return false;
 982              		.loc 1 240 5 is_stmt 1 view .LVU242
 240:Core/Src/servo_control.c ****         return false;
 983              		.loc 1 240 8 is_stmt 0 view .LVU243
 984 000a 8023     		movs	r3, #128
 985 000c DB00     		lsls	r3, r3, #3
 986 000e 9942     		cmp	r1, r3
 987 0010 02D3     		bcc	.L74
 241:Core/Src/servo_control.c ****     
 988              		.loc 1 241 16 view .LVU244
 989 0012 0020     		movs	r0, #0
 990              	.LVL91:
 991              	.L69:
 253:Core/Src/servo_control.c **** 
 992              		.loc 1 253 1 view .LVU245
 993 0014 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 29


 994              		@ sp needed
 995 0016 10BD     		pop	{r4, pc}
 996              	.LVL92:
 997              	.L74:
 243:Core/Src/servo_control.c ****                                lowByte,
 998              		.loc 1 243 5 is_stmt 1 view .LVU246
 243:Core/Src/servo_control.c ****                                lowByte,
 999              		.loc 1 243 19 is_stmt 0 view .LVU247
 1000 0018 01AB     		add	r3, sp, #4
 1001 001a 2221     		movs	r1, #34
 1002              	.LVL93:
 243:Core/Src/servo_control.c ****                                lowByte,
 1003              		.loc 1 243 19 view .LVU248
 1004 001c 1970     		strb	r1, [r3]
 1005 001e 5870     		strb	r0, [r3, #1]
 1006 0020 9A70     		strb	r2, [r3, #2]
 247:Core/Src/servo_control.c ****     
 1007              		.loc 1 247 5 is_stmt 1 view .LVU249
 1008 0022 0322     		movs	r2, #3
 1009              	.LVL94:
 247:Core/Src/servo_control.c ****     
 1010              		.loc 1 247 5 is_stmt 0 view .LVU250
 1011 0024 1F39     		subs	r1, r1, #31
 1012 0026 2000     		movs	r0, r4
 1013              	.LVL95:
 247:Core/Src/servo_control.c ****     
 1014              		.loc 1 247 5 view .LVU251
 1015 0028 FFF7FEFF 		bl	sendServoCommand
 1016              	.LVL96:
 249:Core/Src/servo_control.c ****         return false;
 1017              		.loc 1 249 5 is_stmt 1 view .LVU252
 1018              	.LBB35:
 1019              	.LBI35:
 145:Core/Src/servo_control.c **** {
 1020              		.loc 1 145 13 view .LVU253
 1021              	.LBB36:
 147:Core/Src/servo_control.c ****     {
 1022              		.loc 1 147 5 view .LVU254
 147:Core/Src/servo_control.c ****     {
 1023              		.loc 1 147 10 is_stmt 0 view .LVU255
 1024 002c FFF7FEFF 		bl	getServoResponse
 1025              	.LVL97:
 147:Core/Src/servo_control.c ****     {
 1026              		.loc 1 147 8 view .LVU256
 1027 0030 0028     		cmp	r0, #0
 1028 0032 09D0     		beq	.L71
 155:Core/Src/servo_control.c ****     {
 1029              		.loc 1 155 5 is_stmt 1 view .LVU257
 155:Core/Src/servo_control.c ****     {
 1030              		.loc 1 155 17 is_stmt 0 view .LVU258
 1031 0034 064B     		ldr	r3, .L75
 1032 0036 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 1033              		.loc 1 155 8 view .LVU259
 1034 0038 9C42     		cmp	r4, r3
 1035 003a 07D1     		bne	.L72
 163:Core/Src/servo_control.c ****     {
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 30


 1036              		.loc 1 163 5 is_stmt 1 view .LVU260
 163:Core/Src/servo_control.c ****     {
 1037              		.loc 1 163 17 is_stmt 0 view .LVU261
 1038 003c 044B     		ldr	r3, .L75
 1039 003e 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 1040              		.loc 1 163 8 view .LVU262
 1041 0040 002B     		cmp	r3, #0
 1042 0042 E7D0     		beq	.L69
 1043              	.LBE36:
 1044              	.LBE35:
 250:Core/Src/servo_control.c ****     
 1045              		.loc 1 250 16 view .LVU263
 1046 0044 0020     		movs	r0, #0
 1047 0046 E5E7     		b	.L69
 1048              	.L71:
 1049 0048 0020     		movs	r0, #0
 1050 004a E3E7     		b	.L69
 1051              	.L72:
 1052 004c 0020     		movs	r0, #0
 1053 004e E1E7     		b	.L69
 1054              	.L76:
 1055              		.align	2
 1056              	.L75:
 1057 0050 00000000 		.word	response
 1058              		.cfi_endproc
 1059              	.LFE50:
 1061              		.section	.text.getServoTorque,"ax",%progbits
 1062              		.align	1
 1063              		.global	getServoTorque
 1064              		.syntax unified
 1065              		.code	16
 1066              		.thumb_func
 1067              		.fpu softvfp
 1069              	getServoTorque:
 1070              	.LVL98:
 1071              	.LFB51:
 257:Core/Src/servo_control.c ****     const uint8_t params[2] = {TORQUE,
 1072              		.loc 1 257 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 257:Core/Src/servo_control.c ****     const uint8_t params[2] = {TORQUE,
 1076              		.loc 1 257 1 is_stmt 0 view .LVU265
 1077 0000 30B5     		push	{r4, r5, lr}
 1078              	.LCFI14:
 1079              		.cfi_def_cfa_offset 12
 1080              		.cfi_offset 4, -12
 1081              		.cfi_offset 5, -8
 1082              		.cfi_offset 14, -4
 1083 0002 83B0     		sub	sp, sp, #12
 1084              	.LCFI15:
 1085              		.cfi_def_cfa_offset 24
 1086 0004 0400     		movs	r4, r0
 1087 0006 0D00     		movs	r5, r1
 258:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address TORQUE
 1088              		.loc 1 258 5 is_stmt 1 view .LVU266
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 31


 258:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address TORQUE
 1089              		.loc 1 258 19 is_stmt 0 view .LVU267
 1090 0008 01AB     		add	r3, sp, #4
 1091 000a 0F4A     		ldr	r2, .L81
 1092 000c 1A80     		strh	r2, [r3]
 261:Core/Src/servo_control.c ****     
 1093              		.loc 1 261 5 is_stmt 1 view .LVU268
 1094 000e 0222     		movs	r2, #2
 1095 0010 0221     		movs	r1, #2
 1096              	.LVL99:
 261:Core/Src/servo_control.c ****     
 1097              		.loc 1 261 5 is_stmt 0 view .LVU269
 1098 0012 FFF7FEFF 		bl	sendServoCommand
 1099              	.LVL100:
 263:Core/Src/servo_control.c ****         return false;
 1100              		.loc 1 263 5 is_stmt 1 view .LVU270
 1101              	.LBB37:
 1102              	.LBI37:
 145:Core/Src/servo_control.c **** {
 1103              		.loc 1 145 13 view .LVU271
 1104              	.LBB38:
 147:Core/Src/servo_control.c ****     {
 1105              		.loc 1 147 5 view .LVU272
 147:Core/Src/servo_control.c ****     {
 1106              		.loc 1 147 10 is_stmt 0 view .LVU273
 1107 0016 FFF7FEFF 		bl	getServoResponse
 1108              	.LVL101:
 147:Core/Src/servo_control.c ****     {
 1109              		.loc 1 147 8 view .LVU274
 1110 001a 0028     		cmp	r0, #0
 1111 001c 10D0     		beq	.L78
 155:Core/Src/servo_control.c ****     {
 1112              		.loc 1 155 5 is_stmt 1 view .LVU275
 155:Core/Src/servo_control.c ****     {
 1113              		.loc 1 155 17 is_stmt 0 view .LVU276
 1114 001e 0B4B     		ldr	r3, .L81+4
 1115 0020 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 1116              		.loc 1 155 8 view .LVU277
 1117 0022 9C42     		cmp	r4, r3
 1118 0024 0BD1     		bne	.L79
 163:Core/Src/servo_control.c ****     {
 1119              		.loc 1 163 5 is_stmt 1 view .LVU278
 163:Core/Src/servo_control.c ****     {
 1120              		.loc 1 163 17 is_stmt 0 view .LVU279
 1121 0026 094B     		ldr	r3, .L81+4
 1122 0028 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 1123              		.loc 1 163 8 view .LVU280
 1124 002a 002B     		cmp	r3, #0
 1125 002c 0AD1     		bne	.L80
 1126              	.LVL102:
 163:Core/Src/servo_control.c ****     {
 1127              		.loc 1 163 8 view .LVU281
 1128              	.LBE38:
 1129              	.LBE37:
 266:Core/Src/servo_control.c ****     *torqueValue <<= 8;
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 32


 1130              		.loc 1 266 5 is_stmt 1 view .LVU282
 266:Core/Src/servo_control.c ****     *torqueValue <<= 8;
 1131              		.loc 1 266 35 is_stmt 0 view .LVU283
 1132 002e 074A     		ldr	r2, .L81+4
 1133 0030 1379     		ldrb	r3, [r2, #4]
 267:Core/Src/servo_control.c ****     *torqueValue |= response.params[0];
 1134              		.loc 1 267 5 is_stmt 1 view .LVU284
 267:Core/Src/servo_control.c ****     *torqueValue |= response.params[0];
 1135              		.loc 1 267 18 is_stmt 0 view .LVU285
 1136 0032 1B02     		lsls	r3, r3, #8
 1137 0034 2B80     		strh	r3, [r5]
 268:Core/Src/servo_control.c ****     
 1138              		.loc 1 268 5 is_stmt 1 view .LVU286
 268:Core/Src/servo_control.c ****     
 1139              		.loc 1 268 36 is_stmt 0 view .LVU287
 1140 0036 D278     		ldrb	r2, [r2, #3]
 268:Core/Src/servo_control.c ****     
 1141              		.loc 1 268 18 view .LVU288
 1142 0038 1343     		orrs	r3, r2
 1143 003a 2B80     		strh	r3, [r5]
 270:Core/Src/servo_control.c **** }
 1144              		.loc 1 270 5 is_stmt 1 view .LVU289
 270:Core/Src/servo_control.c **** }
 1145              		.loc 1 270 12 is_stmt 0 view .LVU290
 1146 003c 00E0     		b	.L78
 1147              	.LVL103:
 1148              	.L79:
 264:Core/Src/servo_control.c ****     
 1149              		.loc 1 264 16 view .LVU291
 1150 003e 0020     		movs	r0, #0
 1151              	.LVL104:
 1152              	.L78:
 271:Core/Src/servo_control.c **** 
 1153              		.loc 1 271 1 view .LVU292
 1154 0040 03B0     		add	sp, sp, #12
 1155              		@ sp needed
 1156              	.LVL105:
 271:Core/Src/servo_control.c **** 
 1157              		.loc 1 271 1 view .LVU293
 1158 0042 30BD     		pop	{r4, r5, pc}
 1159              	.LVL106:
 1160              	.L80:
 264:Core/Src/servo_control.c ****     
 1161              		.loc 1 264 16 view .LVU294
 1162 0044 0020     		movs	r0, #0
 1163 0046 FBE7     		b	.L78
 1164              	.L82:
 1165              		.align	2
 1166              	.L81:
 1167 0048 22020000 		.word	546
 1168 004c 00000000 		.word	response
 1169              		.cfi_endproc
 1170              	.LFE51:
 1172              		.section	.text.setServoMaxSpeed,"ax",%progbits
 1173              		.align	1
 1174              		.global	setServoMaxSpeed
 1175              		.syntax unified
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 33


 1176              		.code	16
 1177              		.thumb_func
 1178              		.fpu softvfp
 1180              	setServoMaxSpeed:
 1181              	.LVL107:
 1182              	.LFB52:
 277:Core/Src/servo_control.c ****     const uint8_t highByte = (uint8_t)((speedValue >> 8) & 0xff);
 1183              		.loc 1 277 1 is_stmt 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 8
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Core/Src/servo_control.c ****     const uint8_t highByte = (uint8_t)((speedValue >> 8) & 0xff);
 1187              		.loc 1 277 1 is_stmt 0 view .LVU296
 1188 0000 10B5     		push	{r4, lr}
 1189              	.LCFI16:
 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 4, -8
 1192              		.cfi_offset 14, -4
 1193 0002 82B0     		sub	sp, sp, #8
 1194              	.LCFI17:
 1195              		.cfi_def_cfa_offset 16
 1196 0004 0400     		movs	r4, r0
 278:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(speedValue & 0xff);
 1197              		.loc 1 278 5 is_stmt 1 view .LVU297
 278:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(speedValue & 0xff);
 1198              		.loc 1 278 19 is_stmt 0 view .LVU298
 1199 0006 0A0A     		lsrs	r2, r1, #8
 1200              	.LVL108:
 279:Core/Src/servo_control.c ****     
 1201              		.loc 1 279 5 is_stmt 1 view .LVU299
 279:Core/Src/servo_control.c ****     
 1202              		.loc 1 279 19 is_stmt 0 view .LVU300
 1203 0008 C8B2     		uxtb	r0, r1
 1204              	.LVL109:
 281:Core/Src/servo_control.c ****         return false;
 1205              		.loc 1 281 5 is_stmt 1 view .LVU301
 281:Core/Src/servo_control.c ****         return false;
 1206              		.loc 1 281 8 is_stmt 0 view .LVU302
 1207 000a 8023     		movs	r3, #128
 1208 000c DB00     		lsls	r3, r3, #3
 1209 000e 9942     		cmp	r1, r3
 1210 0010 02D3     		bcc	.L89
 282:Core/Src/servo_control.c ****     
 1211              		.loc 1 282 16 view .LVU303
 1212 0012 0020     		movs	r0, #0
 1213              	.LVL110:
 1214              	.L84:
 294:Core/Src/servo_control.c **** 
 1215              		.loc 1 294 1 view .LVU304
 1216 0014 02B0     		add	sp, sp, #8
 1217              		@ sp needed
 1218 0016 10BD     		pop	{r4, pc}
 1219              	.LVL111:
 1220              	.L89:
 284:Core/Src/servo_control.c ****                                lowByte,
 1221              		.loc 1 284 5 is_stmt 1 view .LVU305
 284:Core/Src/servo_control.c ****                                lowByte,
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 34


 1222              		.loc 1 284 19 is_stmt 0 view .LVU306
 1223 0018 01AB     		add	r3, sp, #4
 1224 001a 2021     		movs	r1, #32
 1225              	.LVL112:
 284:Core/Src/servo_control.c ****                                lowByte,
 1226              		.loc 1 284 19 view .LVU307
 1227 001c 1970     		strb	r1, [r3]
 1228 001e 5870     		strb	r0, [r3, #1]
 1229 0020 9A70     		strb	r2, [r3, #2]
 288:Core/Src/servo_control.c ****     
 1230              		.loc 1 288 5 is_stmt 1 view .LVU308
 1231 0022 0322     		movs	r2, #3
 1232              	.LVL113:
 288:Core/Src/servo_control.c ****     
 1233              		.loc 1 288 5 is_stmt 0 view .LVU309
 1234 0024 1D39     		subs	r1, r1, #29
 1235 0026 2000     		movs	r0, r4
 1236              	.LVL114:
 288:Core/Src/servo_control.c ****     
 1237              		.loc 1 288 5 view .LVU310
 1238 0028 FFF7FEFF 		bl	sendServoCommand
 1239              	.LVL115:
 290:Core/Src/servo_control.c ****         return false;
 1240              		.loc 1 290 5 is_stmt 1 view .LVU311
 1241              	.LBB39:
 1242              	.LBI39:
 145:Core/Src/servo_control.c **** {
 1243              		.loc 1 145 13 view .LVU312
 1244              	.LBB40:
 147:Core/Src/servo_control.c ****     {
 1245              		.loc 1 147 5 view .LVU313
 147:Core/Src/servo_control.c ****     {
 1246              		.loc 1 147 10 is_stmt 0 view .LVU314
 1247 002c FFF7FEFF 		bl	getServoResponse
 1248              	.LVL116:
 147:Core/Src/servo_control.c ****     {
 1249              		.loc 1 147 8 view .LVU315
 1250 0030 0028     		cmp	r0, #0
 1251 0032 09D0     		beq	.L86
 155:Core/Src/servo_control.c ****     {
 1252              		.loc 1 155 5 is_stmt 1 view .LVU316
 155:Core/Src/servo_control.c ****     {
 1253              		.loc 1 155 17 is_stmt 0 view .LVU317
 1254 0034 064B     		ldr	r3, .L90
 1255 0036 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 1256              		.loc 1 155 8 view .LVU318
 1257 0038 9C42     		cmp	r4, r3
 1258 003a 07D1     		bne	.L87
 163:Core/Src/servo_control.c ****     {
 1259              		.loc 1 163 5 is_stmt 1 view .LVU319
 163:Core/Src/servo_control.c ****     {
 1260              		.loc 1 163 17 is_stmt 0 view .LVU320
 1261 003c 044B     		ldr	r3, .L90
 1262 003e 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 1263              		.loc 1 163 8 view .LVU321
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 35


 1264 0040 002B     		cmp	r3, #0
 1265 0042 E7D0     		beq	.L84
 1266              	.LBE40:
 1267              	.LBE39:
 291:Core/Src/servo_control.c ****     
 1268              		.loc 1 291 16 view .LVU322
 1269 0044 0020     		movs	r0, #0
 1270 0046 E5E7     		b	.L84
 1271              	.L86:
 1272 0048 0020     		movs	r0, #0
 1273 004a E3E7     		b	.L84
 1274              	.L87:
 1275 004c 0020     		movs	r0, #0
 1276 004e E1E7     		b	.L84
 1277              	.L91:
 1278              		.align	2
 1279              	.L90:
 1280 0050 00000000 		.word	response
 1281              		.cfi_endproc
 1282              	.LFE52:
 1284              		.section	.text.getServoMaxSpeed,"ax",%progbits
 1285              		.align	1
 1286              		.global	getServoMaxSpeed
 1287              		.syntax unified
 1288              		.code	16
 1289              		.thumb_func
 1290              		.fpu softvfp
 1292              	getServoMaxSpeed:
 1293              	.LVL117:
 1294              	.LFB53:
 298:Core/Src/servo_control.c ****     const uint8_t params[2] = {MAX_SPEED,
 1295              		.loc 1 298 1 is_stmt 1 view -0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 8
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 298:Core/Src/servo_control.c ****     const uint8_t params[2] = {MAX_SPEED,
 1299              		.loc 1 298 1 is_stmt 0 view .LVU324
 1300 0000 30B5     		push	{r4, r5, lr}
 1301              	.LCFI18:
 1302              		.cfi_def_cfa_offset 12
 1303              		.cfi_offset 4, -12
 1304              		.cfi_offset 5, -8
 1305              		.cfi_offset 14, -4
 1306 0002 83B0     		sub	sp, sp, #12
 1307              	.LCFI19:
 1308              		.cfi_def_cfa_offset 24
 1309 0004 0400     		movs	r4, r0
 1310 0006 0D00     		movs	r5, r1
 299:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address MAX_SPEED
 1311              		.loc 1 299 5 is_stmt 1 view .LVU325
 299:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address MAX_SPEED
 1312              		.loc 1 299 19 is_stmt 0 view .LVU326
 1313 0008 01AB     		add	r3, sp, #4
 1314 000a 8822     		movs	r2, #136
 1315 000c 9200     		lsls	r2, r2, #2
 1316 000e 1A80     		strh	r2, [r3]
 302:Core/Src/servo_control.c ****     
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 36


 1317              		.loc 1 302 5 is_stmt 1 view .LVU327
 1318 0010 0222     		movs	r2, #2
 1319 0012 0221     		movs	r1, #2
 1320              	.LVL118:
 302:Core/Src/servo_control.c ****     
 1321              		.loc 1 302 5 is_stmt 0 view .LVU328
 1322 0014 FFF7FEFF 		bl	sendServoCommand
 1323              	.LVL119:
 304:Core/Src/servo_control.c ****         return false;
 1324              		.loc 1 304 5 is_stmt 1 view .LVU329
 1325              	.LBB41:
 1326              	.LBI41:
 145:Core/Src/servo_control.c **** {
 1327              		.loc 1 145 13 view .LVU330
 1328              	.LBB42:
 147:Core/Src/servo_control.c ****     {
 1329              		.loc 1 147 5 view .LVU331
 147:Core/Src/servo_control.c ****     {
 1330              		.loc 1 147 10 is_stmt 0 view .LVU332
 1331 0018 FFF7FEFF 		bl	getServoResponse
 1332              	.LVL120:
 147:Core/Src/servo_control.c ****     {
 1333              		.loc 1 147 8 view .LVU333
 1334 001c 0028     		cmp	r0, #0
 1335 001e 10D0     		beq	.L93
 155:Core/Src/servo_control.c ****     {
 1336              		.loc 1 155 5 is_stmt 1 view .LVU334
 155:Core/Src/servo_control.c ****     {
 1337              		.loc 1 155 17 is_stmt 0 view .LVU335
 1338 0020 0A4B     		ldr	r3, .L96
 1339 0022 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 1340              		.loc 1 155 8 view .LVU336
 1341 0024 9C42     		cmp	r4, r3
 1342 0026 0BD1     		bne	.L94
 163:Core/Src/servo_control.c ****     {
 1343              		.loc 1 163 5 is_stmt 1 view .LVU337
 163:Core/Src/servo_control.c ****     {
 1344              		.loc 1 163 17 is_stmt 0 view .LVU338
 1345 0028 084B     		ldr	r3, .L96
 1346 002a 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 1347              		.loc 1 163 8 view .LVU339
 1348 002c 002B     		cmp	r3, #0
 1349 002e 0AD1     		bne	.L95
 1350              	.LVL121:
 163:Core/Src/servo_control.c ****     {
 1351              		.loc 1 163 8 view .LVU340
 1352              	.LBE42:
 1353              	.LBE41:
 307:Core/Src/servo_control.c ****     *speedValue <<= 8;
 1354              		.loc 1 307 5 is_stmt 1 view .LVU341
 307:Core/Src/servo_control.c ****     *speedValue <<= 8;
 1355              		.loc 1 307 34 is_stmt 0 view .LVU342
 1356 0030 064A     		ldr	r2, .L96
 1357 0032 1379     		ldrb	r3, [r2, #4]
 308:Core/Src/servo_control.c ****     *speedValue |= response.params[0];
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 37


 1358              		.loc 1 308 5 is_stmt 1 view .LVU343
 308:Core/Src/servo_control.c ****     *speedValue |= response.params[0];
 1359              		.loc 1 308 17 is_stmt 0 view .LVU344
 1360 0034 1B02     		lsls	r3, r3, #8
 1361 0036 2B80     		strh	r3, [r5]
 309:Core/Src/servo_control.c ****     
 1362              		.loc 1 309 5 is_stmt 1 view .LVU345
 309:Core/Src/servo_control.c ****     
 1363              		.loc 1 309 35 is_stmt 0 view .LVU346
 1364 0038 D278     		ldrb	r2, [r2, #3]
 309:Core/Src/servo_control.c ****     
 1365              		.loc 1 309 17 view .LVU347
 1366 003a 1343     		orrs	r3, r2
 1367 003c 2B80     		strh	r3, [r5]
 311:Core/Src/servo_control.c **** }
 1368              		.loc 1 311 5 is_stmt 1 view .LVU348
 311:Core/Src/servo_control.c **** }
 1369              		.loc 1 311 12 is_stmt 0 view .LVU349
 1370 003e 00E0     		b	.L93
 1371              	.LVL122:
 1372              	.L94:
 305:Core/Src/servo_control.c ****     
 1373              		.loc 1 305 16 view .LVU350
 1374 0040 0020     		movs	r0, #0
 1375              	.LVL123:
 1376              	.L93:
 312:Core/Src/servo_control.c **** 
 1377              		.loc 1 312 1 view .LVU351
 1378 0042 03B0     		add	sp, sp, #12
 1379              		@ sp needed
 1380              	.LVL124:
 312:Core/Src/servo_control.c **** 
 1381              		.loc 1 312 1 view .LVU352
 1382 0044 30BD     		pop	{r4, r5, pc}
 1383              	.LVL125:
 1384              	.L95:
 305:Core/Src/servo_control.c ****     
 1385              		.loc 1 305 16 view .LVU353
 1386 0046 0020     		movs	r0, #0
 1387 0048 FBE7     		b	.L93
 1388              	.L97:
 1389 004a C046     		.align	2
 1390              	.L96:
 1391 004c 00000000 		.word	response
 1392              		.cfi_endproc
 1393              	.LFE53:
 1395              		.section	.text.getServoCurrentVelocity,"ax",%progbits
 1396              		.align	1
 1397              		.global	getServoCurrentVelocity
 1398              		.syntax unified
 1399              		.code	16
 1400              		.thumb_func
 1401              		.fpu softvfp
 1403              	getServoCurrentVelocity:
 1404              	.LVL126:
 1405              	.LFB54:
 316:Core/Src/servo_control.c ****     const uint8_t params[2] = {CURRENT_SPEED,
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 38


 1406              		.loc 1 316 1 is_stmt 1 view -0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 8
 1409              		@ frame_needed = 0, uses_anonymous_args = 0
 316:Core/Src/servo_control.c ****     const uint8_t params[2] = {CURRENT_SPEED,
 1410              		.loc 1 316 1 is_stmt 0 view .LVU355
 1411 0000 30B5     		push	{r4, r5, lr}
 1412              	.LCFI20:
 1413              		.cfi_def_cfa_offset 12
 1414              		.cfi_offset 4, -12
 1415              		.cfi_offset 5, -8
 1416              		.cfi_offset 14, -4
 1417 0002 83B0     		sub	sp, sp, #12
 1418              	.LCFI21:
 1419              		.cfi_def_cfa_offset 24
 1420 0004 0400     		movs	r4, r0
 1421 0006 0D00     		movs	r5, r1
 317:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address CURRENT_SPEED
 1422              		.loc 1 317 5 is_stmt 1 view .LVU356
 317:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address CURRENT_SPEED
 1423              		.loc 1 317 19 is_stmt 0 view .LVU357
 1424 0008 01AB     		add	r3, sp, #4
 1425 000a 104A     		ldr	r2, .L102
 1426 000c 1A80     		strh	r2, [r3]
 320:Core/Src/servo_control.c ****     
 1427              		.loc 1 320 5 is_stmt 1 view .LVU358
 1428 000e 0222     		movs	r2, #2
 1429 0010 0221     		movs	r1, #2
 1430              	.LVL127:
 320:Core/Src/servo_control.c ****     
 1431              		.loc 1 320 5 is_stmt 0 view .LVU359
 1432 0012 FFF7FEFF 		bl	sendServoCommand
 1433              	.LVL128:
 322:Core/Src/servo_control.c ****         return false;
 1434              		.loc 1 322 5 is_stmt 1 view .LVU360
 1435              	.LBB43:
 1436              	.LBI43:
 145:Core/Src/servo_control.c **** {
 1437              		.loc 1 145 13 view .LVU361
 1438              	.LBB44:
 147:Core/Src/servo_control.c ****     {
 1439              		.loc 1 147 5 view .LVU362
 147:Core/Src/servo_control.c ****     {
 1440              		.loc 1 147 10 is_stmt 0 view .LVU363
 1441 0016 FFF7FEFF 		bl	getServoResponse
 1442              	.LVL129:
 147:Core/Src/servo_control.c ****     {
 1443              		.loc 1 147 8 view .LVU364
 1444 001a 0028     		cmp	r0, #0
 1445 001c 11D0     		beq	.L99
 155:Core/Src/servo_control.c ****     {
 1446              		.loc 1 155 5 is_stmt 1 view .LVU365
 155:Core/Src/servo_control.c ****     {
 1447              		.loc 1 155 17 is_stmt 0 view .LVU366
 1448 001e 0C4B     		ldr	r3, .L102+4
 1449 0020 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 39


 1450              		.loc 1 155 8 view .LVU367
 1451 0022 9C42     		cmp	r4, r3
 1452 0024 0CD1     		bne	.L100
 163:Core/Src/servo_control.c ****     {
 1453              		.loc 1 163 5 is_stmt 1 view .LVU368
 163:Core/Src/servo_control.c ****     {
 1454              		.loc 1 163 17 is_stmt 0 view .LVU369
 1455 0026 0A4B     		ldr	r3, .L102+4
 1456 0028 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 1457              		.loc 1 163 8 view .LVU370
 1458 002a 002B     		cmp	r3, #0
 1459 002c 0BD1     		bne	.L101
 1460              	.LVL130:
 163:Core/Src/servo_control.c ****     {
 1461              		.loc 1 163 8 view .LVU371
 1462              	.LBE44:
 1463              	.LBE43:
 325:Core/Src/servo_control.c ****     *velocityValue <<= 8;
 1464              		.loc 1 325 5 is_stmt 1 view .LVU372
 325:Core/Src/servo_control.c ****     *velocityValue <<= 8;
 1465              		.loc 1 325 37 is_stmt 0 view .LVU373
 1466 002e 084A     		ldr	r2, .L102+4
 1467 0030 1379     		ldrb	r3, [r2, #4]
 326:Core/Src/servo_control.c ****     *velocityValue |= response.params[0];
 1468              		.loc 1 326 5 is_stmt 1 view .LVU374
 326:Core/Src/servo_control.c ****     *velocityValue |= response.params[0];
 1469              		.loc 1 326 20 is_stmt 0 view .LVU375
 1470 0032 1B02     		lsls	r3, r3, #8
 1471 0034 1BB2     		sxth	r3, r3
 1472 0036 2B80     		strh	r3, [r5]
 327:Core/Src/servo_control.c ****     
 1473              		.loc 1 327 5 is_stmt 1 view .LVU376
 327:Core/Src/servo_control.c ****     
 1474              		.loc 1 327 38 is_stmt 0 view .LVU377
 1475 0038 D278     		ldrb	r2, [r2, #3]
 327:Core/Src/servo_control.c ****     
 1476              		.loc 1 327 20 view .LVU378
 1477 003a 1343     		orrs	r3, r2
 1478 003c 2B80     		strh	r3, [r5]
 329:Core/Src/servo_control.c **** }
 1479              		.loc 1 329 5 is_stmt 1 view .LVU379
 329:Core/Src/servo_control.c **** }
 1480              		.loc 1 329 12 is_stmt 0 view .LVU380
 1481 003e 00E0     		b	.L99
 1482              	.LVL131:
 1483              	.L100:
 323:Core/Src/servo_control.c ****     
 1484              		.loc 1 323 16 view .LVU381
 1485 0040 0020     		movs	r0, #0
 1486              	.LVL132:
 1487              	.L99:
 330:Core/Src/servo_control.c **** 
 1488              		.loc 1 330 1 view .LVU382
 1489 0042 03B0     		add	sp, sp, #12
 1490              		@ sp needed
 1491              	.LVL133:
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 40


 330:Core/Src/servo_control.c **** 
 1492              		.loc 1 330 1 view .LVU383
 1493 0044 30BD     		pop	{r4, r5, pc}
 1494              	.LVL134:
 1495              	.L101:
 323:Core/Src/servo_control.c ****     
 1496              		.loc 1 323 16 view .LVU384
 1497 0046 0020     		movs	r0, #0
 1498 0048 FBE7     		b	.L99
 1499              	.L103:
 1500 004a C046     		.align	2
 1501              	.L102:
 1502 004c 26020000 		.word	550
 1503 0050 00000000 		.word	response
 1504              		.cfi_endproc
 1505              	.LFE54:
 1507              		.global	__aeabi_fcmplt
 1508              		.global	__aeabi_fcmpgt
 1509              		.global	__aeabi_f2d
 1510              		.global	__aeabi_dmul
 1511              		.global	__aeabi_d2uiz
 1512              		.section	.text.setServoAngle,"ax",%progbits
 1513              		.align	1
 1514              		.global	setServoAngle
 1515              		.syntax unified
 1516              		.code	16
 1517              		.thumb_func
 1518              		.fpu softvfp
 1520              	setServoAngle:
 1521              	.LVL135:
 1522              	.LFB55:
 336:Core/Src/servo_control.c ****     if (angle < 0 || angle > 300)
 1523              		.loc 1 336 1 is_stmt 1 view -0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 8
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 336:Core/Src/servo_control.c ****     if (angle < 0 || angle > 300)
 1527              		.loc 1 336 1 is_stmt 0 view .LVU386
 1528 0000 30B5     		push	{r4, r5, lr}
 1529              	.LCFI22:
 1530              		.cfi_def_cfa_offset 12
 1531              		.cfi_offset 4, -12
 1532              		.cfi_offset 5, -8
 1533              		.cfi_offset 14, -4
 1534 0002 83B0     		sub	sp, sp, #12
 1535              	.LCFI23:
 1536              		.cfi_def_cfa_offset 24
 1537 0004 0500     		movs	r5, r0
 1538 0006 0C1C     		adds	r4, r1, #0
 337:Core/Src/servo_control.c ****         return false;
 1539              		.loc 1 337 5 is_stmt 1 view .LVU387
 337:Core/Src/servo_control.c ****         return false;
 1540              		.loc 1 337 8 is_stmt 0 view .LVU388
 1541 0008 0021     		movs	r1, #0
 1542              	.LVL136:
 337:Core/Src/servo_control.c ****         return false;
 1543              		.loc 1 337 8 view .LVU389
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 41


 1544 000a 201C     		adds	r0, r4, #0
 1545              	.LVL137:
 337:Core/Src/servo_control.c ****         return false;
 1546              		.loc 1 337 8 view .LVU390
 1547 000c FFF7FEFF 		bl	__aeabi_fcmplt
 1548              	.LVL138:
 1549 0010 0028     		cmp	r0, #0
 1550 0012 2BD1     		bne	.L106
 337:Core/Src/servo_control.c ****         return false;
 1551              		.loc 1 337 19 discriminator 1 view .LVU391
 1552 0014 1849     		ldr	r1, .L112
 1553 0016 201C     		adds	r0, r4, #0
 1554 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 1555              	.LVL139:
 1556 001c 0028     		cmp	r0, #0
 1557 001e 02D0     		beq	.L111
 338:Core/Src/servo_control.c ****     
 1558              		.loc 1 338 16 view .LVU392
 1559 0020 0020     		movs	r0, #0
 1560              	.L105:
 356:Core/Src/servo_control.c **** 
 1561              		.loc 1 356 1 view .LVU393
 1562 0022 03B0     		add	sp, sp, #12
 1563              		@ sp needed
 1564              	.LVL140:
 356:Core/Src/servo_control.c **** 
 1565              		.loc 1 356 1 view .LVU394
 1566 0024 30BD     		pop	{r4, r5, pc}
 1567              	.LVL141:
 1568              	.L111:
 341:Core/Src/servo_control.c ****     
 1569              		.loc 1 341 5 is_stmt 1 view .LVU395
 341:Core/Src/servo_control.c ****     
 1570              		.loc 1 341 50 is_stmt 0 view .LVU396
 1571 0026 201C     		adds	r0, r4, #0
 1572 0028 FFF7FEFF 		bl	__aeabi_f2d
 1573              	.LVL142:
 1574 002c 134A     		ldr	r2, .L112+4
 1575 002e 144B     		ldr	r3, .L112+8
 1576 0030 FFF7FEFF 		bl	__aeabi_dmul
 1577              	.LVL143:
 341:Core/Src/servo_control.c ****     
 1578              		.loc 1 341 20 view .LVU397
 1579 0034 FFF7FEFF 		bl	__aeabi_d2uiz
 1580              	.LVL144:
 1581 0038 80B2     		uxth	r0, r0
 1582              	.LVL145:
 343:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
 1583              		.loc 1 343 5 is_stmt 1 view .LVU398
 343:Core/Src/servo_control.c ****     const uint8_t lowByte = (uint8_t)(angleValue & 0xff);
 1584              		.loc 1 343 19 is_stmt 0 view .LVU399
 1585 003a 020A     		lsrs	r2, r0, #8
 1586              	.LVL146:
 344:Core/Src/servo_control.c ****     
 1587              		.loc 1 344 5 is_stmt 1 view .LVU400
 346:Core/Src/servo_control.c ****                                lowByte,
 1588              		.loc 1 346 5 view .LVU401
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 42


 346:Core/Src/servo_control.c ****                                lowByte,
 1589              		.loc 1 346 19 is_stmt 0 view .LVU402
 1590 003c 01AB     		add	r3, sp, #4
 1591 003e 1E21     		movs	r1, #30
 1592 0040 1970     		strb	r1, [r3]
 1593 0042 5870     		strb	r0, [r3, #1]
 1594 0044 9A70     		strb	r2, [r3, #2]
 350:Core/Src/servo_control.c ****     
 1595              		.loc 1 350 5 is_stmt 1 view .LVU403
 1596 0046 0322     		movs	r2, #3
 1597              	.LVL147:
 350:Core/Src/servo_control.c ****     
 1598              		.loc 1 350 5 is_stmt 0 view .LVU404
 1599 0048 1B39     		subs	r1, r1, #27
 1600 004a 2800     		movs	r0, r5
 1601              	.LVL148:
 350:Core/Src/servo_control.c ****     
 1602              		.loc 1 350 5 view .LVU405
 1603 004c FFF7FEFF 		bl	sendServoCommand
 1604              	.LVL149:
 352:Core/Src/servo_control.c ****         return false;
 1605              		.loc 1 352 5 is_stmt 1 view .LVU406
 1606              	.LBB45:
 1607              	.LBI45:
 145:Core/Src/servo_control.c **** {
 1608              		.loc 1 145 13 view .LVU407
 1609              	.LBB46:
 147:Core/Src/servo_control.c ****     {
 1610              		.loc 1 147 5 view .LVU408
 147:Core/Src/servo_control.c ****     {
 1611              		.loc 1 147 10 is_stmt 0 view .LVU409
 1612 0050 FFF7FEFF 		bl	getServoResponse
 1613              	.LVL150:
 147:Core/Src/servo_control.c ****     {
 1614              		.loc 1 147 8 view .LVU410
 1615 0054 0028     		cmp	r0, #0
 1616 0056 0BD0     		beq	.L108
 155:Core/Src/servo_control.c ****     {
 1617              		.loc 1 155 5 is_stmt 1 view .LVU411
 155:Core/Src/servo_control.c ****     {
 1618              		.loc 1 155 17 is_stmt 0 view .LVU412
 1619 0058 0A4B     		ldr	r3, .L112+12
 1620 005a 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 1621              		.loc 1 155 8 view .LVU413
 1622 005c 9D42     		cmp	r5, r3
 1623 005e 09D1     		bne	.L109
 163:Core/Src/servo_control.c ****     {
 1624              		.loc 1 163 5 is_stmt 1 view .LVU414
 163:Core/Src/servo_control.c ****     {
 1625              		.loc 1 163 17 is_stmt 0 view .LVU415
 1626 0060 084B     		ldr	r3, .L112+12
 1627 0062 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 1628              		.loc 1 163 8 view .LVU416
 1629 0064 002B     		cmp	r3, #0
 1630 0066 DCD0     		beq	.L105
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 43


 1631              	.LBE46:
 1632              	.LBE45:
 353:Core/Src/servo_control.c ****     
 1633              		.loc 1 353 16 view .LVU417
 1634 0068 0020     		movs	r0, #0
 1635 006a DAE7     		b	.L105
 1636              	.LVL151:
 1637              	.L106:
 338:Core/Src/servo_control.c ****     
 1638              		.loc 1 338 16 view .LVU418
 1639 006c 0020     		movs	r0, #0
 1640 006e D8E7     		b	.L105
 1641              	.LVL152:
 1642              	.L108:
 353:Core/Src/servo_control.c ****     
 1643              		.loc 1 353 16 view .LVU419
 1644 0070 0020     		movs	r0, #0
 1645 0072 D6E7     		b	.L105
 1646              	.L109:
 1647 0074 0020     		movs	r0, #0
 1648 0076 D4E7     		b	.L105
 1649              	.L113:
 1650              		.align	2
 1651              	.L112:
 1652 0078 00009643 		.word	1133903872
 1653 007c 48E17A14 		.word	343597384
 1654 0080 AE470B40 		.word	1074481070
 1655 0084 00000000 		.word	response
 1656              		.cfi_endproc
 1657              	.LFE55:
 1659              		.global	__aeabi_ui2f
 1660              		.global	__aeabi_ddiv
 1661              		.global	__aeabi_d2f
 1662              		.section	.text.getServoAngle,"ax",%progbits
 1663              		.align	1
 1664              		.global	getServoAngle
 1665              		.syntax unified
 1666              		.code	16
 1667              		.thumb_func
 1668              		.fpu softvfp
 1670              	getServoAngle:
 1671              	.LVL153:
 1672              	.LFB56:
 360:Core/Src/servo_control.c ****     const uint8_t params[2] = {CURRENT_ANGLE,
 1673              		.loc 1 360 1 is_stmt 1 view -0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 8
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 360:Core/Src/servo_control.c ****     const uint8_t params[2] = {CURRENT_ANGLE,
 1677              		.loc 1 360 1 is_stmt 0 view .LVU421
 1678 0000 70B5     		push	{r4, r5, r6, lr}
 1679              	.LCFI24:
 1680              		.cfi_def_cfa_offset 16
 1681              		.cfi_offset 4, -16
 1682              		.cfi_offset 5, -12
 1683              		.cfi_offset 6, -8
 1684              		.cfi_offset 14, -4
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 44


 1685 0002 82B0     		sub	sp, sp, #8
 1686              	.LCFI25:
 1687              		.cfi_def_cfa_offset 24
 1688 0004 0600     		movs	r6, r0
 1689 0006 0D00     		movs	r5, r1
 361:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address CURRENT_ANGLE
 1690              		.loc 1 361 5 is_stmt 1 view .LVU422
 361:Core/Src/servo_control.c ****                                2};  // read two bytes, starting at address CURRENT_ANGLE
 1691              		.loc 1 361 19 is_stmt 0 view .LVU423
 1692 0008 01AB     		add	r3, sp, #4
 1693 000a 8922     		movs	r2, #137
 1694 000c 9200     		lsls	r2, r2, #2
 1695 000e 1A80     		strh	r2, [r3]
 364:Core/Src/servo_control.c ****     
 1696              		.loc 1 364 5 is_stmt 1 view .LVU424
 1697 0010 0222     		movs	r2, #2
 1698 0012 0221     		movs	r1, #2
 1699              	.LVL154:
 364:Core/Src/servo_control.c ****     
 1700              		.loc 1 364 5 is_stmt 0 view .LVU425
 1701 0014 FFF7FEFF 		bl	sendServoCommand
 1702              	.LVL155:
 366:Core/Src/servo_control.c ****         return false;
 1703              		.loc 1 366 5 is_stmt 1 view .LVU426
 1704              	.LBB47:
 1705              	.LBI47:
 145:Core/Src/servo_control.c **** {
 1706              		.loc 1 145 13 view .LVU427
 1707              	.LBB48:
 147:Core/Src/servo_control.c ****     {
 1708              		.loc 1 147 5 view .LVU428
 147:Core/Src/servo_control.c ****     {
 1709              		.loc 1 147 10 is_stmt 0 view .LVU429
 1710 0018 FFF7FEFF 		bl	getServoResponse
 1711              	.LVL156:
 1712 001c 041E     		subs	r4, r0, #0
 147:Core/Src/servo_control.c ****     {
 1713              		.loc 1 147 8 view .LVU430
 1714 001e 1DD0     		beq	.L115
 155:Core/Src/servo_control.c ****     {
 1715              		.loc 1 155 5 is_stmt 1 view .LVU431
 155:Core/Src/servo_control.c ****     {
 1716              		.loc 1 155 17 is_stmt 0 view .LVU432
 1717 0020 114B     		ldr	r3, .L118
 1718 0022 1B78     		ldrb	r3, [r3]
 155:Core/Src/servo_control.c ****     {
 1719              		.loc 1 155 8 view .LVU433
 1720 0024 9E42     		cmp	r6, r3
 1721 0026 18D1     		bne	.L116
 163:Core/Src/servo_control.c ****     {
 1722              		.loc 1 163 5 is_stmt 1 view .LVU434
 163:Core/Src/servo_control.c ****     {
 1723              		.loc 1 163 17 is_stmt 0 view .LVU435
 1724 0028 0F4B     		ldr	r3, .L118
 1725 002a 9B78     		ldrb	r3, [r3, #2]
 163:Core/Src/servo_control.c ****     {
 1726              		.loc 1 163 8 view .LVU436
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 45


 1727 002c 002B     		cmp	r3, #0
 1728 002e 18D1     		bne	.L117
 1729              	.LVL157:
 163:Core/Src/servo_control.c ****     {
 1730              		.loc 1 163 8 view .LVU437
 1731              	.LBE48:
 1732              	.LBE47:
 369:Core/Src/servo_control.c ****     angleValue <<= 8;
 1733              		.loc 1 369 5 is_stmt 1 view .LVU438
 369:Core/Src/servo_control.c ****     angleValue <<= 8;
 1734              		.loc 1 369 42 is_stmt 0 view .LVU439
 1735 0030 0D4A     		ldr	r2, .L118
 369:Core/Src/servo_control.c ****     angleValue <<= 8;
 1736              		.loc 1 369 14 view .LVU440
 1737 0032 1379     		ldrb	r3, [r2, #4]
 1738              	.LVL158:
 370:Core/Src/servo_control.c ****     angleValue |= response.params[0];
 1739              		.loc 1 370 5 is_stmt 1 view .LVU441
 370:Core/Src/servo_control.c ****     angleValue |= response.params[0];
 1740              		.loc 1 370 16 is_stmt 0 view .LVU442
 1741 0034 1B02     		lsls	r3, r3, #8
 1742              	.LVL159:
 371:Core/Src/servo_control.c ****     
 1743              		.loc 1 371 5 is_stmt 1 view .LVU443
 371:Core/Src/servo_control.c ****     
 1744              		.loc 1 371 34 is_stmt 0 view .LVU444
 1745 0036 D078     		ldrb	r0, [r2, #3]
 371:Core/Src/servo_control.c ****     
 1746              		.loc 1 371 16 view .LVU445
 1747 0038 1843     		orrs	r0, r3
 1748              	.LVL160:
 373:Core/Src/servo_control.c ****     
 1749              		.loc 1 373 5 is_stmt 1 view .LVU446
 373:Core/Src/servo_control.c ****     
 1750              		.loc 1 373 14 is_stmt 0 view .LVU447
 1751 003a FFF7FEFF 		bl	__aeabi_ui2f
 1752              	.LVL161:
 373:Core/Src/servo_control.c ****     
 1753              		.loc 1 373 14 view .LVU448
 1754 003e FFF7FEFF 		bl	__aeabi_f2d
 1755              	.LVL162:
 373:Core/Src/servo_control.c ****     
 1756              		.loc 1 373 32 view .LVU449
 1757 0042 0022     		movs	r2, #0
 1758 0044 094B     		ldr	r3, .L118+4
 1759 0046 FFF7FEFF 		bl	__aeabi_dmul
 1760              	.LVL163:
 373:Core/Src/servo_control.c ****     
 1761              		.loc 1 373 40 view .LVU450
 1762 004a 0022     		movs	r2, #0
 1763 004c 084B     		ldr	r3, .L118+8
 1764 004e FFF7FEFF 		bl	__aeabi_ddiv
 1765              	.LVL164:
 1766 0052 FFF7FEFF 		bl	__aeabi_d2f
 1767              	.LVL165:
 373:Core/Src/servo_control.c ****     
 1768              		.loc 1 373 12 view .LVU451
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 46


 1769 0056 2860     		str	r0, [r5]
 375:Core/Src/servo_control.c **** }
 1770              		.loc 1 375 5 is_stmt 1 view .LVU452
 375:Core/Src/servo_control.c **** }
 1771              		.loc 1 375 12 is_stmt 0 view .LVU453
 1772 0058 00E0     		b	.L115
 1773              	.LVL166:
 1774              	.L116:
 367:Core/Src/servo_control.c ****     
 1775              		.loc 1 367 16 view .LVU454
 1776 005a 0024     		movs	r4, #0
 1777              	.LVL167:
 1778              	.L115:
 376:Core/Src/servo_control.c **** 
 1779              		.loc 1 376 1 view .LVU455
 1780 005c 2000     		movs	r0, r4
 1781 005e 02B0     		add	sp, sp, #8
 1782              		@ sp needed
 1783              	.LVL168:
 376:Core/Src/servo_control.c **** 
 1784              		.loc 1 376 1 view .LVU456
 1785 0060 70BD     		pop	{r4, r5, r6, pc}
 1786              	.LVL169:
 1787              	.L117:
 367:Core/Src/servo_control.c ****     
 1788              		.loc 1 367 16 view .LVU457
 1789 0062 0024     		movs	r4, #0
 1790 0064 FAE7     		b	.L115
 1791              	.L119:
 1792 0066 C046     		.align	2
 1793              	.L118:
 1794 0068 00000000 		.word	response
 1795 006c 00C07240 		.word	1081262080
 1796 0070 00F88F40 		.word	1083176960
 1797              		.cfi_endproc
 1798              	.LFE56:
 1800              		.section	.text.USART1_IRQHandler,"ax",%progbits
 1801              		.align	1
 1802              		.global	USART1_IRQHandler
 1803              		.syntax unified
 1804              		.code	16
 1805              		.thumb_func
 1806              		.fpu softvfp
 1808              	USART1_IRQHandler:
 1809              	.LFB61:
 411:Core/Src/servo_control.c **** 
 412:Core/Src/servo_control.c **** void USART1_IRQHandler (void)
 413:Core/Src/servo_control.c **** {
 1810              		.loc 1 413 1 is_stmt 1 view -0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 8
 1813              		@ frame_needed = 0, uses_anonymous_args = 0
 1814 0000 00B5     		push	{lr}
 1815              	.LCFI26:
 1816              		.cfi_def_cfa_offset 4
 1817              		.cfi_offset 14, -4
 1818 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 47


 1819              	.LCFI27:
 1820              		.cfi_def_cfa_offset 16
 414:Core/Src/servo_control.c **** 	// check if the USART3 receive interrupt flag was set
 415:Core/Src/servo_control.c **** 	if (HAL_HalfDuplex_EnableReceiver(&huart1))
 1821              		.loc 1 415 2 view .LVU459
 1822              		.loc 1 415 6 is_stmt 0 view .LVU460
 1823 0004 0F48     		ldr	r0, .L124
 1824 0006 FFF7FEFF 		bl	HAL_HalfDuplex_EnableReceiver
 1825              	.LVL170:
 1826              		.loc 1 415 5 view .LVU461
 1827 000a 0028     		cmp	r0, #0
 1828 000c 01D1     		bne	.L123
 1829              	.L120:
 416:Core/Src/servo_control.c **** 	{   
 417:Core/Src/servo_control.c **** 		uint8_t byte;
 418:Core/Src/servo_control.c ****         HAL_UART_Receive(&huart1,&byte,sizeof(byte),150); // grab the byte from the data register
 419:Core/Src/servo_control.c ****         
 420:Core/Src/servo_control.c ****         receiveBufferEnd++;
 421:Core/Src/servo_control.c ****         if (receiveBufferEnd >= receiveBuffer + REC_BUFFER_LEN)
 422:Core/Src/servo_control.c ****             receiveBufferEnd = receiveBuffer;
 423:Core/Src/servo_control.c ****         
 424:Core/Src/servo_control.c ****         *receiveBufferEnd = byte;
 425:Core/Src/servo_control.c **** 	}
 426:Core/Src/servo_control.c **** }
 1830              		.loc 1 426 1 view .LVU462
 1831 000e 03B0     		add	sp, sp, #12
 1832              		@ sp needed
 1833 0010 00BD     		pop	{pc}
 1834              	.L123:
 1835              	.LBB49:
 417:Core/Src/servo_control.c ****         HAL_UART_Receive(&huart1,&byte,sizeof(byte),150); // grab the byte from the data register
 1836              		.loc 1 417 3 is_stmt 1 view .LVU463
 418:Core/Src/servo_control.c ****         
 1837              		.loc 1 418 9 view .LVU464
 1838 0012 9623     		movs	r3, #150
 1839 0014 0122     		movs	r2, #1
 1840 0016 6946     		mov	r1, sp
 1841 0018 0731     		adds	r1, r1, #7
 1842 001a 0A48     		ldr	r0, .L124
 1843 001c FFF7FEFF 		bl	HAL_UART_Receive
 1844              	.LVL171:
 420:Core/Src/servo_control.c ****         if (receiveBufferEnd >= receiveBuffer + REC_BUFFER_LEN)
 1845              		.loc 1 420 9 view .LVU465
 420:Core/Src/servo_control.c ****         if (receiveBufferEnd >= receiveBuffer + REC_BUFFER_LEN)
 1846              		.loc 1 420 25 is_stmt 0 view .LVU466
 1847 0020 094B     		ldr	r3, .L124+4
 1848 0022 1A68     		ldr	r2, [r3]
 1849 0024 0132     		adds	r2, r2, #1
 1850 0026 1A60     		str	r2, [r3]
 421:Core/Src/servo_control.c ****             receiveBufferEnd = receiveBuffer;
 1851              		.loc 1 421 9 is_stmt 1 view .LVU467
 421:Core/Src/servo_control.c ****             receiveBufferEnd = receiveBuffer;
 1852              		.loc 1 421 30 is_stmt 0 view .LVU468
 1853 0028 1A68     		ldr	r2, [r3]
 421:Core/Src/servo_control.c ****             receiveBufferEnd = receiveBuffer;
 1854              		.loc 1 421 12 view .LVU469
 1855 002a 084B     		ldr	r3, .L124+8
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 48


 1856 002c 9A42     		cmp	r2, r3
 1857 002e 02D3     		bcc	.L122
 422:Core/Src/servo_control.c ****         
 1858              		.loc 1 422 13 is_stmt 1 view .LVU470
 422:Core/Src/servo_control.c ****         
 1859              		.loc 1 422 30 is_stmt 0 view .LVU471
 1860 0030 054B     		ldr	r3, .L124+4
 1861 0032 074A     		ldr	r2, .L124+12
 1862 0034 1A60     		str	r2, [r3]
 1863              	.L122:
 424:Core/Src/servo_control.c **** 	}
 1864              		.loc 1 424 9 is_stmt 1 view .LVU472
 1865 0036 044B     		ldr	r3, .L124+4
 1866 0038 1B68     		ldr	r3, [r3]
 424:Core/Src/servo_control.c **** 	}
 1867              		.loc 1 424 27 is_stmt 0 view .LVU473
 1868 003a 6A46     		mov	r2, sp
 1869 003c 0732     		adds	r2, r2, #7
 1870 003e 1278     		ldrb	r2, [r2]
 1871 0040 1A70     		strb	r2, [r3]
 1872              	.LBE49:
 1873              		.loc 1 426 1 view .LVU474
 1874 0042 E4E7     		b	.L120
 1875              	.L125:
 1876              		.align	2
 1877              	.L124:
 1878 0044 00000000 		.word	huart1
 1879 0048 00000000 		.word	.LANCHOR0
 1880 004c 20000000 		.word	receiveBuffer+32
 1881 0050 00000000 		.word	receiveBuffer
 1882              		.cfi_endproc
 1883              	.LFE61:
 1885              		.global	receiveBufferEnd
 1886              		.global	receiveBufferStart
 1887              		.comm	receiveBuffer,32,4
 1888              		.comm	response,31,4
 1889              		.global	servoErrorCode
 1890              		.section	.bss.servoErrorCode,"aw",%nobits
 1891              		.set	.LANCHOR2,. + 0
 1894              	servoErrorCode:
 1895 0000 00       		.space	1
 1896              		.section	.data.receiveBufferEnd,"aw"
 1897              		.align	2
 1898              		.set	.LANCHOR0,. + 0
 1901              	receiveBufferEnd:
 1902 0000 00000000 		.word	receiveBuffer
 1903              		.section	.data.receiveBufferStart,"aw"
 1904              		.align	2
 1905              		.set	.LANCHOR1,. + 0
 1908              	receiveBufferStart:
 1909 0000 00000000 		.word	receiveBuffer
 1910              		.text
 1911              	.Letext0:
 1912              		.file 2 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc
 1913              		.file 3 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc
 1914              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1915              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 49


 1916              		.file 6 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc
 1917              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1918              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1919              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 1920              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1921              		.file 11 "Core/Inc/usart.h"
 1922              		.file 12 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgc
 1923              		.file 13 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgc
 1924              		.file 14 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgc
 1925              		.file 15 "Core/Inc/servo_control.h"
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 servo_control.c
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:21     .text.sendServoByte:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:29     .text.sendServoByte:0000000000000000 sendServoByte
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:75     .text.sendServoByte:0000000000000028 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:80     .text.sendServoCommand:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:87     .text.sendServoCommand:0000000000000000 sendServoCommand
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:204    .text.clearServoReceiveBuffer:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:211    .text.clearServoReceiveBuffer:0000000000000000 clearServoReceiveBuffer
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:230    .text.clearServoReceiveBuffer:000000000000000c $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:236    .text.getServoBytesAvailable:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:243    .text.getServoBytesAvailable:0000000000000000 getServoBytesAvailable
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:288    .text.getServoBytesAvailable:0000000000000018 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:294    .text.getServoByte:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:301    .text.getServoByte:0000000000000000 getServoByte
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:339    .text.getServoByte:0000000000000020 $d
                            *COM*:0000000000000020 receiveBuffer
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:346    .text.getServoResponse:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:353    .text.getServoResponse:0000000000000000 getServoResponse
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:584    .text.getServoResponse:00000000000000b4 $d
                            *COM*:000000000000001f response
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:590    .text.pingServo:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:597    .text.pingServo:0000000000000000 pingServo
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:663    .text.pingServo:0000000000000034 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:668    .text.setServoReturnDelayMicros:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:675    .text.setServoReturnDelayMicros:0000000000000000 setServoReturnDelayMicros
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:765    .text.setServoReturnDelayMicros:0000000000000050 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:770    .text.setServoBlinkConditions:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:777    .text.setServoBlinkConditions:0000000000000000 setServoBlinkConditions
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:855    .text.setServoBlinkConditions:0000000000000040 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:860    .text.setServoShutdownConditions:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:867    .text.setServoShutdownConditions:0000000000000000 setServoShutdownConditions
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:945    .text.setServoShutdownConditions:0000000000000040 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:950    .text.setServoTorque:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:957    .text.setServoTorque:0000000000000000 setServoTorque
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1057   .text.setServoTorque:0000000000000050 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1062   .text.getServoTorque:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1069   .text.getServoTorque:0000000000000000 getServoTorque
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1167   .text.getServoTorque:0000000000000048 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1173   .text.setServoMaxSpeed:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1180   .text.setServoMaxSpeed:0000000000000000 setServoMaxSpeed
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1280   .text.setServoMaxSpeed:0000000000000050 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1285   .text.getServoMaxSpeed:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1292   .text.getServoMaxSpeed:0000000000000000 getServoMaxSpeed
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1391   .text.getServoMaxSpeed:000000000000004c $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1396   .text.getServoCurrentVelocity:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1403   .text.getServoCurrentVelocity:0000000000000000 getServoCurrentVelocity
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1502   .text.getServoCurrentVelocity:000000000000004c $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1513   .text.setServoAngle:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1520   .text.setServoAngle:0000000000000000 setServoAngle
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1652   .text.setServoAngle:0000000000000078 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1663   .text.getServoAngle:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1670   .text.getServoAngle:0000000000000000 getServoAngle
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1794   .text.getServoAngle:0000000000000068 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1801   .text.USART1_IRQHandler:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1808   .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1878   .text.USART1_IRQHandler:0000000000000044 $d
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s 			page 51


C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1901   .data.receiveBufferEnd:0000000000000000 receiveBufferEnd
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1908   .data.receiveBufferStart:0000000000000000 receiveBufferStart
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1894   .bss.servoErrorCode:0000000000000000 servoErrorCode
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1895   .bss.servoErrorCode:0000000000000000 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1897   .data.receiveBufferEnd:0000000000000000 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccuEBS98.s:1904   .data.receiveBufferStart:0000000000000000 $d

UNDEFINED SYMBOLS
_printf_float
_scanf_float
HAL_HalfDuplex_EnableTransmitter
HAL_UART_Transmit
HAL_HalfDuplex_EnableReceiver
huart1
__aeabi_fcmplt
__aeabi_fcmpgt
__aeabi_f2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_ui2f
__aeabi_ddiv
__aeabi_d2f
HAL_UART_Receive
